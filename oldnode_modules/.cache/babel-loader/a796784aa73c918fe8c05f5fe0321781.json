{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar Components = {\n  TimePicker: {\n    openButton: 'TimePicker Open Button',\n    fromField: 'TimePicker from field',\n    toField: 'TimePicker to field',\n    applyTimeRange: 'TimePicker submit button'\n  },\n  DataSource: {\n    TestData: {\n      QueryTab: {\n        scenarioSelectContainer: 'Test Data Query scenario select container',\n        scenarioSelect: 'Test Data Query scenario select',\n        max: 'TestData max',\n        min: 'TestData min',\n        noise: 'TestData noise',\n        seriesCount: 'TestData series count',\n        spread: 'TestData spread',\n        startValue: 'TestData start value'\n      }\n    },\n    Jaeger: {\n      traceIDInput: 'Trace ID'\n    },\n    Prometheus: {\n      configPage: {\n        exemplarsAddButton: 'Add exemplar config button',\n        internalLinkSwitch: 'Internal link switch'\n      },\n      exemplarMarker: 'Exemplar marker'\n    }\n  },\n  Menu: {\n    MenuComponent: function (title) {\n      return title + \" menu\";\n    },\n    MenuGroup: function (title) {\n      return title + \" menu group\";\n    },\n    MenuItem: function (title) {\n      return title + \" menu item\";\n    }\n  },\n  Panels: {\n    Panel: {\n      title: function (title) {\n        return \"Panel header title item \" + title;\n      },\n      headerItems: function (item) {\n        return \"Panel header item \" + item;\n      },\n      containerByTitle: function (title) {\n        return \"Panel container title \" + title;\n      },\n      headerCornerInfo: function (mode) {\n        return \"Panel header \" + mode;\n      }\n    },\n    Visualization: {\n      Graph: {\n        VisualizationTab: {\n          legendSection: 'Legend section'\n        },\n        Legend: {\n          legendItemAlias: function (name) {\n            return \"gpl alias \" + name;\n          },\n          showLegendSwitch: 'gpl show legend'\n        },\n        xAxis: {\n          labels: function () {\n            return 'div.flot-x-axis > div.flot-tick-label';\n          }\n        }\n      },\n      BarGauge: {\n        value: 'Bar gauge value'\n      },\n      PieChart: {\n        svgSlice: 'Pie Chart Slice'\n      },\n      Text: {\n        container: function () {\n          return '.markdown-html';\n        }\n      },\n      Table: {\n        header: 'table header'\n      }\n    }\n  },\n  VizLegend: {\n    seriesName: function (name) {\n      return \"VizLegend series \" + name;\n    }\n  },\n  Drawer: {\n    General: {\n      title: function (title) {\n        return \"Drawer title \" + title;\n      },\n      expand: 'Drawer expand',\n      contract: 'Drawer contract',\n      close: 'Drawer close',\n      rcContentWrapper: function () {\n        return '.drawer-content-wrapper';\n      }\n    }\n  },\n  PanelEditor: {\n    General: {\n      content: 'Panel editor content'\n    },\n    OptionsPane: {\n      content: 'Panel editor option pane content',\n      select: 'Panel editor option pane select',\n      fieldLabel: function (type) {\n        return type + \" field property editor\";\n      }\n    },\n    // not sure about the naming *DataPane*\n    DataPane: {\n      content: 'Panel editor data pane content'\n    },\n    applyButton: 'panel editor apply',\n    toggleVizPicker: 'toggle-viz-picker',\n    toggleVizOptions: 'toggle-viz-options',\n    toggleTableView: 'toggle-table-view'\n  },\n  PanelInspector: {\n    Data: {\n      content: 'Panel inspector Data content'\n    },\n    Stats: {\n      content: 'Panel inspector Stats content'\n    },\n    Json: {\n      content: 'Panel inspector Json content'\n    },\n    Query: {\n      content: 'Panel inspector Query content',\n      refreshButton: 'Panel inspector Query refresh button',\n      jsonObjectKeys: function () {\n        return '.json-formatter-key';\n      }\n    }\n  },\n  Tab: {\n    title: function (title) {\n      return \"Tab \" + title;\n    },\n    active: function () {\n      return '[class*=\"-activeTabStyle\"]';\n    }\n  },\n  RefreshPicker: {\n    runButton: 'RefreshPicker run button',\n    intervalButton: 'RefreshPicker interval button'\n  },\n  QueryTab: {\n    content: 'Query editor tab content',\n    queryInspectorButton: 'Query inspector button',\n    addQuery: 'Query editor add query button'\n  },\n  QueryEditorRows: {\n    rows: 'Query editor row'\n  },\n  QueryEditorRow: {\n    actionButton: function (title) {\n      return title + \" query operation action\";\n    },\n    title: function (refId) {\n      return \"Query editor row title \" + refId;\n    }\n  },\n  AlertTab: {\n    content: 'Alert editor tab content'\n  },\n  Alert: {\n    alert: function (severity) {\n      return \"Alert \" + severity;\n    }\n  },\n  TransformTab: {\n    content: 'Transform editor tab content',\n    newTransform: function (name) {\n      return \"New transform \" + name;\n    },\n    transformationEditor: function (name) {\n      return \"Transformation editor \" + name;\n    },\n    transformationEditorDebugger: function (name) {\n      return \"Transformation editor debugger \" + name;\n    }\n  },\n  Transforms: {\n    card: function (name) {\n      return \"New transform \" + name;\n    },\n    Reduce: {\n      modeLabel: 'Transform mode label',\n      calculationsLabel: 'Transform calculations label'\n    },\n    searchInput: 'search transformations'\n  },\n  PageToolbar: {\n    container: function () {\n      return '.page-toolbar';\n    },\n    item: function (tooltip) {\n      return \"Page toolbar button \" + tooltip;\n    }\n  },\n  QueryEditorToolbarItem: {\n    button: function (title) {\n      return \"QueryEditor toolbar item button \" + title;\n    }\n  },\n  BackButton: {\n    backArrow: 'Go Back button'\n  },\n  OptionsGroup: {\n    group: function (title) {\n      return title ? \"Options group \" + title : 'Options group';\n    },\n    toggle: function (title) {\n      return title ? \"Options group \" + title + \" toggle\" : 'Options group toggle';\n    }\n  },\n  PluginVisualization: {\n    item: function (title) {\n      return \"Plugin visualization item \" + title;\n    },\n    current: function () {\n      return '[class*=\"-currentVisualizationItem\"]';\n    }\n  },\n  Select: {\n    option: 'Select option',\n    input: function () {\n      return 'input[id*=\"react-select-\"]';\n    },\n    singleValue: function () {\n      return 'div[class*=\"-singleValue\"]';\n    }\n  },\n  FieldConfigEditor: {\n    content: 'Field config editor content'\n  },\n  OverridesConfigEditor: {\n    content: 'Field overrides editor content'\n  },\n  FolderPicker: {\n    container: 'Folder picker select container'\n  },\n  DataSourcePicker: {\n    container: 'Data source picker select container'\n  },\n  TimeZonePicker: {\n    container: 'Time zone picker select container'\n  },\n  TraceViewer: {\n    spanBar: function () {\n      return '[data-test-id=\"SpanBar--wrapper\"]';\n    }\n  },\n  QueryField: {\n    container: 'Query field'\n  },\n  ValuePicker: {\n    button: function (name) {\n      return \"Value picker button \" + name;\n    },\n    select: function (name) {\n      return \"Value picker select \" + name;\n    }\n  },\n  Search: {\n    section: 'Search section',\n    items: 'Search items'\n  },\n  DashboardLinks: {\n    container: 'Dashboard link container',\n    dropDown: 'Dashboard link dropdown',\n    link: 'Dashboard link'\n  },\n  LoadingIndicator: {\n    icon: 'Loading indicator'\n  },\n  CallToActionCard: {\n    button: function (name) {\n      return \"Call to action button \" + name;\n    }\n  },\n  DataLinksContextMenu: {\n    singleLink: 'Data link'\n  },\n  CodeEditor: {\n    container: 'Code editor container'\n  }\n};\nvar Pages = {\n  Login: {\n    url: '/login',\n    username: 'Username input field',\n    password: 'Password input field',\n    submit: 'Login button',\n    skip: 'Skip change password button'\n  },\n  Home: {\n    url: '/'\n  },\n  DataSource: {\n    name: 'Data source settings page name input field',\n    delete: 'Data source settings page Delete button',\n    readOnly: 'Data source settings page read only message',\n    saveAndTest: 'Data source settings page Save and Test button',\n    alert: 'Data source settings page Alert'\n  },\n  DataSources: {\n    url: '/datasources',\n    dataSources: function (dataSourceName) {\n      return \"Data source list item \" + dataSourceName;\n    }\n  },\n  AddDataSource: {\n    url: '/datasources/new',\n    dataSourcePlugins: function (pluginName) {\n      return \"Data source plugin item \" + pluginName;\n    }\n  },\n  ConfirmModal: {\n    delete: 'Confirm Modal Danger Button'\n  },\n  AddDashboard: {\n    url: '/dashboard/new',\n    addNewPanel: 'Add new panel',\n    addNewRow: 'Add new row',\n    addNewPanelLibrary: 'Add new panel from panel library'\n  },\n  Dashboard: {\n    url: function (uid) {\n      return \"/d/\" + uid;\n    },\n    DashNav: {\n      nav: 'Dashboard navigation'\n    },\n    SubMenu: {\n      submenu: 'Dashboard submenu',\n      submenuItem: 'Dashboard template variables submenu item',\n      submenuItemLabels: function (item) {\n        return \"Dashboard template variables submenu Label \" + item;\n      },\n      submenuItemValueDropDownValueLinkTexts: function (item) {\n        return \"Dashboard template variables Variable Value DropDown value link text \" + item;\n      },\n      submenuItemValueDropDownDropDown: 'Dashboard template variables Variable Value DropDown DropDown',\n      submenuItemValueDropDownOptionTexts: function (item) {\n        return \"Dashboard template variables Variable Value DropDown option text \" + item;\n      }\n    },\n    Settings: {\n      General: {\n        deleteDashBoard: 'Dashboard settings page delete dashboard button',\n        sectionItems: function (item) {\n          return \"Dashboard settings section item \" + item;\n        },\n        saveDashBoard: 'Dashboard settings aside actions Save button',\n        saveAsDashBoard: 'Dashboard settings aside actions Save As button',\n        timezone: 'Time zone picker select container',\n        title: 'Dashboard settings page title'\n      },\n      Annotations: {\n        List: {\n          addAnnotationCTA: Components.CallToActionCard.button('Add annotation query')\n        },\n        Settings: {\n          name: 'Annotations settings name input'\n        }\n      },\n      Variables: {\n        List: {\n          addVariableCTA: Components.CallToActionCard.button('Add variable'),\n          newButton: 'Variable editor New variable button',\n          table: 'Variable editor Table',\n          tableRowNameFields: function (variableName) {\n            return \"Variable editor Table Name field \" + variableName;\n          },\n          tableRowDefinitionFields: function (variableName) {\n            return \"Variable editor Table Definition field \" + variableName;\n          },\n          tableRowArrowUpButtons: function (variableName) {\n            return \"Variable editor Table ArrowUp button \" + variableName;\n          },\n          tableRowArrowDownButtons: function (variableName) {\n            return \"Variable editor Table ArrowDown button \" + variableName;\n          },\n          tableRowDuplicateButtons: function (variableName) {\n            return \"Variable editor Table Duplicate button \" + variableName;\n          },\n          tableRowRemoveButtons: function (variableName) {\n            return \"Variable editor Table Remove button \" + variableName;\n          }\n        },\n        Edit: {\n          General: {\n            headerLink: 'Variable editor Header link',\n            modeLabelNew: 'Variable editor Header mode New',\n            modeLabelEdit: 'Variable editor Header mode Edit',\n            generalNameInput: 'Variable editor Form Name field',\n            generalTypeSelect: 'Variable editor Form Type select',\n            generalLabelInput: 'Variable editor Form Label field',\n            generalHideSelect: 'Variable editor Form Hide select',\n            selectionOptionsMultiSwitch: 'Variable editor Form Multi switch',\n            selectionOptionsIncludeAllSwitch: 'Variable editor Form IncludeAll switch',\n            selectionOptionsCustomAllInput: 'Variable editor Form IncludeAll field',\n            previewOfValuesOption: 'Variable editor Preview of Values option',\n            submitButton: 'Variable editor Submit button'\n          },\n          QueryVariable: {\n            queryOptionsDataSourceSelect: Components.DataSourcePicker.container,\n            queryOptionsRefreshSelect: 'Variable editor Form Query Refresh select',\n            queryOptionsRegExInput: 'Variable editor Form Query RegEx field',\n            queryOptionsSortSelect: 'Variable editor Form Query Sort select',\n            queryOptionsQueryInput: 'Variable editor Form Default Variable Query Editor textarea',\n            valueGroupsTagsEnabledSwitch: 'Variable editor Form Query UseTags switch',\n            valueGroupsTagsTagsQueryInput: 'Variable editor Form Query TagsQuery field',\n            valueGroupsTagsTagsValuesQueryInput: 'Variable editor Form Query TagsValuesQuery field'\n          },\n          ConstantVariable: {\n            constantOptionsQueryInput: 'Variable editor Form Constant Query field'\n          },\n          TextBoxVariable: {\n            textBoxOptionsQueryInput: 'Variable editor Form TextBox Query field'\n          }\n        }\n      }\n    }\n  },\n  Dashboards: {\n    url: '/dashboards',\n    dashboards: function (title) {\n      return \"Dashboard search item \" + title;\n    }\n  },\n  SaveDashboardAsModal: {\n    newName: 'Save dashboard title field',\n    save: 'Save dashboard button'\n  },\n  SaveDashboardModal: {\n    save: 'Dashboard settings Save Dashboard Modal Save button',\n    saveVariables: 'Dashboard settings Save Dashboard Modal Save variables checkbox',\n    saveTimerange: 'Dashboard settings Save Dashboard Modal Save timerange checkbox'\n  },\n  SharePanelModal: {\n    linkToRenderedImage: 'Link to rendered image'\n  },\n  Explore: {\n    url: '/explore',\n    General: {\n      container: 'Explore',\n      graph: 'Explore Graph',\n      table: 'Explore Table',\n      scrollBar: function () {\n        return '.scrollbar-view';\n      }\n    },\n    Toolbar: {\n      navBar: function () {\n        return '.explore-toolbar';\n      }\n    }\n  },\n  SoloPanel: {\n    url: function (page) {\n      return \"/d-solo/\" + page;\n    }\n  },\n  PluginsList: {\n    page: 'Plugins list page',\n    list: 'Plugins list',\n    listItem: 'Plugins list item',\n    signatureErrorNotice: 'Unsigned plugins notice'\n  },\n  PluginPage: {\n    page: 'Plugin page',\n    signatureInfo: 'Plugin signature info'\n  },\n  PlaylistForm: {\n    name: 'Playlist name',\n    interval: 'Playlist interval',\n    itemRow: 'Playlist item row',\n    itemIdType: 'Playlist item dashboard by ID type',\n    itemTagType: 'Playlist item dashboard by Tag type',\n    itemMoveUp: 'Move playlist item order up',\n    itemMoveDown: 'Move playlist item order down',\n    itemDelete: 'Delete playlist item'\n  }\n};\nvar selectors = {\n  pages: Pages,\n  components: Components\n};\nexports.selectors = selectors;","map":{"version":3,"sources":["../src/selectors/components.ts","../src/selectors/pages.ts","../src/selectors/index.ts"],"names":[],"mappings":"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","sourcesContent":["export const Components = {\n  TimePicker: {\n    openButton: 'TimePicker Open Button',\n    fromField: 'TimePicker from field',\n    toField: 'TimePicker to field',\n    applyTimeRange: 'TimePicker submit button',\n  },\n  DataSource: {\n    TestData: {\n      QueryTab: {\n        scenarioSelectContainer: 'Test Data Query scenario select container',\n        scenarioSelect: 'Test Data Query scenario select',\n        max: 'TestData max',\n        min: 'TestData min',\n        noise: 'TestData noise',\n        seriesCount: 'TestData series count',\n        spread: 'TestData spread',\n        startValue: 'TestData start value',\n      },\n    },\n    Jaeger: {\n      traceIDInput: 'Trace ID',\n    },\n    Prometheus: {\n      configPage: {\n        exemplarsAddButton: 'Add exemplar config button',\n        internalLinkSwitch: 'Internal link switch',\n      },\n      exemplarMarker: 'Exemplar marker',\n    },\n  },\n  Menu: {\n    MenuComponent: (title: string) => `${title} menu`,\n    MenuGroup: (title: string) => `${title} menu group`,\n    MenuItem: (title: string) => `${title} menu item`,\n  },\n  Panels: {\n    Panel: {\n      title: (title: string) => `Panel header title item ${title}`,\n      headerItems: (item: string) => `Panel header item ${item}`,\n      containerByTitle: (title: string) => `Panel container title ${title}`,\n      headerCornerInfo: (mode: string) => `Panel header ${mode}`,\n    },\n    Visualization: {\n      Graph: {\n        VisualizationTab: {\n          legendSection: 'Legend section',\n        },\n        Legend: {\n          legendItemAlias: (name: string) => `gpl alias ${name}`,\n          showLegendSwitch: 'gpl show legend',\n        },\n        xAxis: {\n          labels: () => 'div.flot-x-axis > div.flot-tick-label',\n        },\n      },\n      BarGauge: {\n        value: 'Bar gauge value',\n      },\n      PieChart: {\n        svgSlice: 'Pie Chart Slice',\n      },\n      Text: {\n        container: () => '.markdown-html',\n      },\n      Table: {\n        header: 'table header',\n      },\n    },\n  },\n  VizLegend: {\n    seriesName: (name: string) => `VizLegend series ${name}`,\n  },\n  Drawer: {\n    General: {\n      title: (title: string) => `Drawer title ${title}`,\n      expand: 'Drawer expand',\n      contract: 'Drawer contract',\n      close: 'Drawer close',\n      rcContentWrapper: () => '.drawer-content-wrapper',\n    },\n  },\n  PanelEditor: {\n    General: {\n      content: 'Panel editor content',\n    },\n    OptionsPane: {\n      content: 'Panel editor option pane content',\n      select: 'Panel editor option pane select',\n      fieldLabel: (type: string) => `${type} field property editor`,\n    },\n    // not sure about the naming *DataPane*\n    DataPane: {\n      content: 'Panel editor data pane content',\n    },\n    applyButton: 'panel editor apply',\n    toggleVizPicker: 'toggle-viz-picker',\n    toggleVizOptions: 'toggle-viz-options',\n    toggleTableView: 'toggle-table-view',\n  },\n  PanelInspector: {\n    Data: {\n      content: 'Panel inspector Data content',\n    },\n    Stats: {\n      content: 'Panel inspector Stats content',\n    },\n    Json: {\n      content: 'Panel inspector Json content',\n    },\n    Query: {\n      content: 'Panel inspector Query content',\n      refreshButton: 'Panel inspector Query refresh button',\n      jsonObjectKeys: () => '.json-formatter-key',\n    },\n  },\n  Tab: {\n    title: (title: string) => `Tab ${title}`,\n    active: () => '[class*=\"-activeTabStyle\"]',\n  },\n  RefreshPicker: {\n    runButton: 'RefreshPicker run button',\n    intervalButton: 'RefreshPicker interval button',\n  },\n  QueryTab: {\n    content: 'Query editor tab content',\n    queryInspectorButton: 'Query inspector button',\n    addQuery: 'Query editor add query button',\n  },\n  QueryEditorRows: {\n    rows: 'Query editor row',\n  },\n  QueryEditorRow: {\n    actionButton: (title: string) => `${title} query operation action`,\n    title: (refId: string) => `Query editor row title ${refId}`,\n  },\n  AlertTab: {\n    content: 'Alert editor tab content',\n  },\n  Alert: {\n    alert: (severity: string) => `Alert ${severity}`,\n  },\n  TransformTab: {\n    content: 'Transform editor tab content',\n    newTransform: (name: string) => `New transform ${name}`,\n    transformationEditor: (name: string) => `Transformation editor ${name}`,\n    transformationEditorDebugger: (name: string) => `Transformation editor debugger ${name}`,\n  },\n  Transforms: {\n    card: (name: string) => `New transform ${name}`,\n    Reduce: {\n      modeLabel: 'Transform mode label',\n      calculationsLabel: 'Transform calculations label',\n    },\n    searchInput: 'search transformations',\n  },\n  PageToolbar: {\n    container: () => '.page-toolbar',\n    item: (tooltip: string) => `Page toolbar button ${tooltip}`,\n  },\n  QueryEditorToolbarItem: {\n    button: (title: string) => `QueryEditor toolbar item button ${title}`,\n  },\n  BackButton: {\n    backArrow: 'Go Back button',\n  },\n  OptionsGroup: {\n    group: (title?: string) => (title ? `Options group ${title}` : 'Options group'),\n    toggle: (title?: string) => (title ? `Options group ${title} toggle` : 'Options group toggle'),\n  },\n  PluginVisualization: {\n    item: (title: string) => `Plugin visualization item ${title}`,\n    current: () => '[class*=\"-currentVisualizationItem\"]',\n  },\n  Select: {\n    option: 'Select option',\n    input: () => 'input[id*=\"react-select-\"]',\n    singleValue: () => 'div[class*=\"-singleValue\"]',\n  },\n  FieldConfigEditor: {\n    content: 'Field config editor content',\n  },\n  OverridesConfigEditor: {\n    content: 'Field overrides editor content',\n  },\n  FolderPicker: {\n    container: 'Folder picker select container',\n  },\n  DataSourcePicker: {\n    container: 'Data source picker select container',\n  },\n  TimeZonePicker: {\n    container: 'Time zone picker select container',\n  },\n  TraceViewer: {\n    spanBar: () => '[data-test-id=\"SpanBar--wrapper\"]',\n  },\n  QueryField: { container: 'Query field' },\n  ValuePicker: {\n    button: (name: string) => `Value picker button ${name}`,\n    select: (name: string) => `Value picker select ${name}`,\n  },\n  Search: {\n    section: 'Search section',\n    items: 'Search items',\n  },\n  DashboardLinks: {\n    container: 'Dashboard link container',\n    dropDown: 'Dashboard link dropdown',\n    link: 'Dashboard link',\n  },\n  LoadingIndicator: {\n    icon: 'Loading indicator',\n  },\n  CallToActionCard: {\n    button: (name: string) => `Call to action button ${name}`,\n  },\n  DataLinksContextMenu: {\n    singleLink: 'Data link',\n  },\n  CodeEditor: {\n    container: 'Code editor container',\n  },\n};\n","import { Components } from './components';\n\nexport const Pages = {\n  Login: {\n    url: '/login',\n    username: 'Username input field',\n    password: 'Password input field',\n    submit: 'Login button',\n    skip: 'Skip change password button',\n  },\n  Home: {\n    url: '/',\n  },\n  DataSource: {\n    name: 'Data source settings page name input field',\n    delete: 'Data source settings page Delete button',\n    readOnly: 'Data source settings page read only message',\n    saveAndTest: 'Data source settings page Save and Test button',\n    alert: 'Data source settings page Alert',\n  },\n  DataSources: {\n    url: '/datasources',\n    dataSources: (dataSourceName: string) => `Data source list item ${dataSourceName}`,\n  },\n  AddDataSource: {\n    url: '/datasources/new',\n    dataSourcePlugins: (pluginName: string) => `Data source plugin item ${pluginName}`,\n  },\n  ConfirmModal: {\n    delete: 'Confirm Modal Danger Button',\n  },\n  AddDashboard: {\n    url: '/dashboard/new',\n    addNewPanel: 'Add new panel',\n    addNewRow: 'Add new row',\n    addNewPanelLibrary: 'Add new panel from panel library',\n  },\n  Dashboard: {\n    url: (uid: string) => `/d/${uid}`,\n    DashNav: {\n      nav: 'Dashboard navigation',\n    },\n    SubMenu: {\n      submenu: 'Dashboard submenu',\n      submenuItem: 'Dashboard template variables submenu item',\n      submenuItemLabels: (item: string) => `Dashboard template variables submenu Label ${item}`,\n      submenuItemValueDropDownValueLinkTexts: (item: string) =>\n        `Dashboard template variables Variable Value DropDown value link text ${item}`,\n      submenuItemValueDropDownDropDown: 'Dashboard template variables Variable Value DropDown DropDown',\n      submenuItemValueDropDownOptionTexts: (item: string) =>\n        `Dashboard template variables Variable Value DropDown option text ${item}`,\n    },\n    Settings: {\n      General: {\n        deleteDashBoard: 'Dashboard settings page delete dashboard button',\n        sectionItems: (item: string) => `Dashboard settings section item ${item}`,\n        saveDashBoard: 'Dashboard settings aside actions Save button',\n        saveAsDashBoard: 'Dashboard settings aside actions Save As button',\n        timezone: 'Time zone picker select container',\n        title: 'Dashboard settings page title',\n      },\n      Annotations: {\n        List: {\n          addAnnotationCTA: Components.CallToActionCard.button('Add annotation query'),\n        },\n        Settings: {\n          name: 'Annotations settings name input',\n        },\n      },\n      Variables: {\n        List: {\n          addVariableCTA: Components.CallToActionCard.button('Add variable'),\n          newButton: 'Variable editor New variable button',\n          table: 'Variable editor Table',\n          tableRowNameFields: (variableName: string) => `Variable editor Table Name field ${variableName}`,\n          tableRowDefinitionFields: (variableName: string) => `Variable editor Table Definition field ${variableName}`,\n          tableRowArrowUpButtons: (variableName: string) => `Variable editor Table ArrowUp button ${variableName}`,\n          tableRowArrowDownButtons: (variableName: string) => `Variable editor Table ArrowDown button ${variableName}`,\n          tableRowDuplicateButtons: (variableName: string) => `Variable editor Table Duplicate button ${variableName}`,\n          tableRowRemoveButtons: (variableName: string) => `Variable editor Table Remove button ${variableName}`,\n        },\n        Edit: {\n          General: {\n            headerLink: 'Variable editor Header link',\n            modeLabelNew: 'Variable editor Header mode New',\n            modeLabelEdit: 'Variable editor Header mode Edit',\n            generalNameInput: 'Variable editor Form Name field',\n            generalTypeSelect: 'Variable editor Form Type select',\n            generalLabelInput: 'Variable editor Form Label field',\n            generalHideSelect: 'Variable editor Form Hide select',\n            selectionOptionsMultiSwitch: 'Variable editor Form Multi switch',\n            selectionOptionsIncludeAllSwitch: 'Variable editor Form IncludeAll switch',\n            selectionOptionsCustomAllInput: 'Variable editor Form IncludeAll field',\n            previewOfValuesOption: 'Variable editor Preview of Values option',\n            submitButton: 'Variable editor Submit button',\n          },\n          QueryVariable: {\n            queryOptionsDataSourceSelect: Components.DataSourcePicker.container,\n            queryOptionsRefreshSelect: 'Variable editor Form Query Refresh select',\n            queryOptionsRegExInput: 'Variable editor Form Query RegEx field',\n            queryOptionsSortSelect: 'Variable editor Form Query Sort select',\n            queryOptionsQueryInput: 'Variable editor Form Default Variable Query Editor textarea',\n            valueGroupsTagsEnabledSwitch: 'Variable editor Form Query UseTags switch',\n            valueGroupsTagsTagsQueryInput: 'Variable editor Form Query TagsQuery field',\n            valueGroupsTagsTagsValuesQueryInput: 'Variable editor Form Query TagsValuesQuery field',\n          },\n          ConstantVariable: {\n            constantOptionsQueryInput: 'Variable editor Form Constant Query field',\n          },\n          TextBoxVariable: {\n            textBoxOptionsQueryInput: 'Variable editor Form TextBox Query field',\n          },\n        },\n      },\n    },\n  },\n  Dashboards: {\n    url: '/dashboards',\n    dashboards: (title: string) => `Dashboard search item ${title}`,\n  },\n  SaveDashboardAsModal: {\n    newName: 'Save dashboard title field',\n    save: 'Save dashboard button',\n  },\n  SaveDashboardModal: {\n    save: 'Dashboard settings Save Dashboard Modal Save button',\n    saveVariables: 'Dashboard settings Save Dashboard Modal Save variables checkbox',\n    saveTimerange: 'Dashboard settings Save Dashboard Modal Save timerange checkbox',\n  },\n  SharePanelModal: {\n    linkToRenderedImage: 'Link to rendered image',\n  },\n  Explore: {\n    url: '/explore',\n    General: {\n      container: 'Explore',\n      graph: 'Explore Graph',\n      table: 'Explore Table',\n      scrollBar: () => '.scrollbar-view',\n    },\n    Toolbar: {\n      navBar: () => '.explore-toolbar',\n    },\n  },\n  SoloPanel: {\n    url: (page: string) => `/d-solo/${page}`,\n  },\n  PluginsList: {\n    page: 'Plugins list page',\n    list: 'Plugins list',\n    listItem: 'Plugins list item',\n    signatureErrorNotice: 'Unsigned plugins notice',\n  },\n  PluginPage: {\n    page: 'Plugin page',\n    signatureInfo: 'Plugin signature info',\n  },\n  PlaylistForm: {\n    name: 'Playlist name',\n    interval: 'Playlist interval',\n    itemRow: 'Playlist item row',\n    itemIdType: 'Playlist item dashboard by ID type',\n    itemTagType: 'Playlist item dashboard by Tag type',\n    itemMoveUp: 'Move playlist item order up',\n    itemMoveDown: 'Move playlist item order down',\n    itemDelete: 'Delete playlist item',\n  },\n};\n","import { Pages } from './pages';\nimport { Components } from './components';\nimport { E2ESelectors } from '../types';\n\nexport const selectors: { pages: E2ESelectors<typeof Pages>; components: E2ESelectors<typeof Components> } = {\n  pages: Pages,\n  components: Components,\n};\n"]},"metadata":{},"sourceType":"script"}