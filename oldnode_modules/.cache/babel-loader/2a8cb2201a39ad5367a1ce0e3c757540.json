{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\specification\\\\dashboard-specification-wizard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport * as Icon from \"react-bootstrap-icons\";\nimport StepZilla from \"react-stepzilla\";\nimport \"./specification-wizard.css\";\nimport ContextDescription from \"./steps/context-description\";\nimport DecisionDescription from \"./steps/decision-description\";\nimport IndicatorChooser from \"./steps/indicator-chooser\";\nimport FrameReference from \"./steps/frame-reference\";\nimport ComprehensionLevel from \"./steps/comprehension-level\";\nimport GenerateComponent from \"./steps/generate-component\";\nimport dash from \"../../data/template_dash.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst outlineComponent = () => {\n  return /*#__PURE__*/_jsxDEV(ContextDescription, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};\n\nconst decisionComponent = () => {\n  return /*#__PURE__*/_jsxDEV(DecisionDescription, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n};\n\nconst mainFrameComponent = () => {\n  return /*#__PURE__*/_jsxDEV(FrameReference, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 12\n  }, this);\n};\n\nconst secondaryFrameComponent = () => {\n  return /*#__PURE__*/_jsxDEV(ComprehensionLevel, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\nconst ladConfigComponent = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 10\n  }, this);\n};\n\nconst finalComponent = () => {\n  return /*#__PURE__*/_jsxDEV(GenerateComponent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\nfunction DashboardSpecificationWizard(props) {\n  _s();\n\n  const [dashboardStructure, setDashboardStructure] = useState({\n    context: {},\n    referenceFrame: {},\n    comprehensionFrames: [],\n    metaLAD: []\n  });\n  const wsteps = [{\n    name: 'Step 1',\n    component: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 35\n    }, this)\n  }, {\n    name: 'Step 2',\n    component: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 35\n    }, this)\n  }, {\n    name: 'Step 3',\n    component: /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 35\n    }, this)\n  }];\n  const [steps, setSteps] = useState([{\n    key: \"firstStep\",\n    label: \"Use case outline\",\n    isDone: true,\n    component: outlineComponent\n  }, {\n    key: \"secondStep\",\n    label: \"Decision context\",\n    isDone: true,\n    component: decisionComponent\n  }, {\n    key: \"thirdStep\",\n    label: \"Situation perception\",\n    isDone: false,\n    component: mainFrameComponent\n  }, {\n    key: \"forthStep\",\n    label: \"Fine-grained analysis\",\n    isDone: false,\n    component: secondaryFrameComponent\n  }, {\n    key: \"fifthStep\",\n    label: \"Interface composition\",\n    isDone: false,\n    component: ladConfigComponent\n  }, {\n    key: \"finalStep\",\n    label: \"LAD config & generation\",\n    isDone: false,\n    component: finalComponent\n  }]);\n  const [activeStep, setActiveStep] = useState(steps[0]);\n\n  const handleNext = () => {\n    window.scrollTo(0, 0);\n\n    if (steps[steps.length - 1].key === activeStep.key) {\n      alert(\"You have completed the generation process...\");\n      return;\n    }\n\n    const index = steps.findIndex(x => x.key === activeStep.key);\n    setSteps(prevStep => prevStep.map(x => {\n      if (x.key === activeStep.key) x.isDone = true;\n      return x;\n    }));\n    console.log(steps[index]);\n    setActiveStep(steps[index + 1]);\n  };\n\n  const handleBack = () => {\n    window.scrollTo(0, 0);\n    const index = steps.findIndex(x => x.key === activeStep.key);\n    if (index === 0) return;\n    setSteps(prevStep => prevStep.map(x => {\n      if (x.key === activeStep.key) x.isDone = false;\n      return x;\n    }));\n    setActiveStep(steps[index - 1]);\n  };\n\n  const activateStep = i => {\n    window.scrollTo(0, 0);\n    setSteps(prevStep => prevStep.map(x => {\n      if (x.key === activeStep.key) x.isDone = false;\n      return x;\n    }));\n    setActiveStep(steps[i]);\n  };\n\n  const handlClose = () => {\n    props.onCloseWizard();\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-progress\",\n      children: /*#__PURE__*/_jsxDEV(StepZilla, {\n        steps: wsteps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashboardSpecificationWizard, \"vfsxzLa8d4JS4jxnVKvH2W/+G7c=\");\n\n_c = DashboardSpecificationWizard;\nexport default DashboardSpecificationWizard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardSpecificationWizard\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/specification/dashboard-specification-wizard.js"],"names":["React","useState","Icon","StepZilla","ContextDescription","DecisionDescription","IndicatorChooser","FrameReference","ComprehensionLevel","GenerateComponent","dash","outlineComponent","decisionComponent","mainFrameComponent","secondaryFrameComponent","ladConfigComponent","finalComponent","DashboardSpecificationWizard","props","dashboardStructure","setDashboardStructure","context","referenceFrame","comprehensionFrames","metaLAD","wsteps","name","component","steps","setSteps","key","label","isDone","activeStep","setActiveStep","handleNext","window","scrollTo","length","alert","index","findIndex","x","prevStep","map","console","log","handleBack","activateStep","i","handlClose","onCloseWizard"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,uBAAtB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,4BAAP;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,sBAAO,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAGA,MAAMC,iBAAiB,GAAG,MAAM;AAC5B,sBAAO,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD;;AAGA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,sBAAO,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAFD;;AAGA,MAAMC,uBAAuB,GAAG,MAAM;AACpC,sBAAO,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAC3B,sBAAO,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,SAASC,4BAAT,CAAsCC,KAAtC,EAA6C;AAAA;;AAC3C,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA4CnB,QAAQ,CAAC;AACzDoB,IAAAA,OAAO,EAAC,EADiD;AAEzDC,IAAAA,cAAc,EAAC,EAF0C;AAGzDC,IAAAA,mBAAmB,EAAC,EAHqC;AAIzDC,IAAAA,OAAO,EAAC;AAJiD,GAAD,CAA1D;AAMA,QAAMC,MAAM,GACV,CACE;AAACC,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,SAAS,eAAE;AAAA;AAAA;AAAA;AAAA;AAA5B,GADF,EAEE;AAACD,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,SAAS,eAAE;AAAA;AAAA;AAAA;AAAA;AAA5B,GAFF,EAGE;AAACD,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,SAAS,eAAE;AAAA;AAAA;AAAA;AAAA;AAA5B,GAHF,CADF;AAMA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB5B,QAAQ,CAAC,CACjC;AACE6B,IAAAA,GAAG,EAAE,WADP;AAEEC,IAAAA,KAAK,EAAE,kBAFT;AAGEC,IAAAA,MAAM,EAAE,IAHV;AAIEL,IAAAA,SAAS,EAAEhB;AAJb,GADiC,EAOjC;AACEmB,IAAAA,GAAG,EAAE,YADP;AAEEC,IAAAA,KAAK,EAAE,kBAFT;AAGEC,IAAAA,MAAM,EAAE,IAHV;AAIEL,IAAAA,SAAS,EAAEf;AAJb,GAPiC,EAajC;AACEkB,IAAAA,GAAG,EAAE,WADP;AAEEC,IAAAA,KAAK,EAAE,sBAFT;AAGEC,IAAAA,MAAM,EAAE,KAHV;AAIEL,IAAAA,SAAS,EAAEd;AAJb,GAbiC,EAmBjC;AACEiB,IAAAA,GAAG,EAAE,WADP;AAEEC,IAAAA,KAAK,EAAE,uBAFT;AAGEC,IAAAA,MAAM,EAAE,KAHV;AAIEL,IAAAA,SAAS,EAAEb;AAJb,GAnBiC,EAyBjC;AACEgB,IAAAA,GAAG,EAAE,WADP;AAEEC,IAAAA,KAAK,EAAE,uBAFT;AAGEC,IAAAA,MAAM,EAAE,KAHV;AAIEL,IAAAA,SAAS,EAAEZ;AAJb,GAzBiC,EA+BjC;AACEe,IAAAA,GAAG,EAAE,WADP;AAEEC,IAAAA,KAAK,EAAE,yBAFT;AAGEC,IAAAA,MAAM,EAAE,KAHV;AAIEL,IAAAA,SAAS,EAAEX;AAJb,GA/BiC,CAAD,CAAlC;AAuCA,QAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BjC,QAAQ,CAAC2B,KAAK,CAAC,CAAD,CAAN,CAA5C;;AAEA,QAAMO,UAAU,GAAG,MAAM;AACvBC,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;;AACA,QAAIT,KAAK,CAACA,KAAK,CAACU,MAAN,GAAe,CAAhB,CAAL,CAAwBR,GAAxB,KAAgCG,UAAU,CAACH,GAA/C,EAAoD;AAClDS,MAAAA,KAAK,CAAC,8CAAD,CAAL;AACA;AACD;;AACD,UAAMC,KAAK,GAAGZ,KAAK,CAACa,SAAN,CAAiBC,CAAD,IAAOA,CAAC,CAACZ,GAAF,KAAUG,UAAU,CAACH,GAA5C,CAAd;AACAD,IAAAA,QAAQ,CAAEc,QAAD,IACPA,QAAQ,CAACC,GAAT,CAAcF,CAAD,IAAO;AAClB,UAAIA,CAAC,CAACZ,GAAF,KAAUG,UAAU,CAACH,GAAzB,EAA8BY,CAAC,CAACV,MAAF,GAAW,IAAX;AAC9B,aAAOU,CAAP;AACD,KAHD,CADM,CAAR;AAMAG,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAK,CAACY,KAAD,CAAjB;AACAN,IAAAA,aAAa,CAACN,KAAK,CAACY,KAAK,GAAG,CAAT,CAAN,CAAb;AACD,GAfD;;AAiBA,QAAMO,UAAU,GAAG,MAAM;AACvBX,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACA,UAAMG,KAAK,GAAGZ,KAAK,CAACa,SAAN,CAAiBC,CAAD,IAAOA,CAAC,CAACZ,GAAF,KAAUG,UAAU,CAACH,GAA5C,CAAd;AACA,QAAIU,KAAK,KAAK,CAAd,EAAiB;AAEjBX,IAAAA,QAAQ,CAAEc,QAAD,IACPA,QAAQ,CAACC,GAAT,CAAcF,CAAD,IAAO;AAClB,UAAIA,CAAC,CAACZ,GAAF,KAAUG,UAAU,CAACH,GAAzB,EAA8BY,CAAC,CAACV,MAAF,GAAW,KAAX;AAC9B,aAAOU,CAAP;AACD,KAHD,CADM,CAAR;AAMAR,IAAAA,aAAa,CAACN,KAAK,CAACY,KAAK,GAAG,CAAT,CAAN,CAAb;AACD,GAZD;;AAcA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1Bb,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AAEAR,IAAAA,QAAQ,CAAEc,QAAD,IACPA,QAAQ,CAACC,GAAT,CAAcF,CAAD,IAAO;AAClB,UAAIA,CAAC,CAACZ,GAAF,KAAUG,UAAU,CAACH,GAAzB,EAA8BY,CAAC,CAACV,MAAF,GAAW,KAAX;AAC9B,aAAOU,CAAP;AACD,KAHD,CADM,CAAR;AAMAR,IAAAA,aAAa,CAACN,KAAK,CAACqB,CAAD,CAAN,CAAb;AACD,GAVD;;AAYA,QAAMC,UAAU,GAAG,MAAM;AACvBhC,IAAAA,KAAK,CAACiC,aAAN;AACA;AACD,GAHD;;AAKA,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE1B;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA7GQR,4B;;KAAAA,4B;AA+GT,eAAeA,4BAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport StepZilla from \"react-stepzilla\";\r\n\r\nimport \"./specification-wizard.css\";\r\nimport ContextDescription from \"./steps/context-description\";\r\nimport DecisionDescription from \"./steps/decision-description\";\r\nimport IndicatorChooser from \"./steps/indicator-chooser\";\r\nimport FrameReference from \"./steps/frame-reference\"\r\nimport ComprehensionLevel from \"./steps/comprehension-level\";\r\nimport GenerateComponent from \"./steps/generate-component\";\r\nimport dash from \"../../data/template_dash.json\";\r\n\r\nconst outlineComponent = () => {\r\n  return <ContextDescription />;\r\n};\r\nconst decisionComponent = () => {\r\n    return <DecisionDescription />;\r\n};\r\nconst mainFrameComponent = () => {\r\n    return <FrameReference />;\r\n};\r\nconst secondaryFrameComponent = () => {\r\n  return <ComprehensionLevel />;\r\n};\r\n\r\nconst ladConfigComponent = () => {\r\n  return <div />;\r\n};\r\nconst finalComponent = () => {\r\n  return <GenerateComponent />;\r\n};\r\n\r\nfunction DashboardSpecificationWizard(props) {\r\n  const [dashboardStructure, setDashboardStructure]=useState({\r\n    context:{},\r\n    referenceFrame:{},\r\n    comprehensionFrames:[],\r\n    metaLAD:[]    \r\n  });\r\n  const wsteps =\r\n    [\r\n      {name: 'Step 1', component: <div />},\r\n      {name: 'Step 2', component: <div />},\r\n      {name: 'Step 3', component: <div />}\r\n    ]\r\n  const [steps, setSteps] = useState([\r\n    {\r\n      key: \"firstStep\",\r\n      label: \"Use case outline\",\r\n      isDone: true,\r\n      component: outlineComponent,\r\n    },\r\n    {\r\n      key: \"secondStep\",\r\n      label: \"Decision context\",\r\n      isDone: true,\r\n      component: decisionComponent,\r\n    },\r\n    {\r\n      key: \"thirdStep\",\r\n      label: \"Situation perception\",\r\n      isDone: false,\r\n      component: mainFrameComponent,\r\n    },\r\n    {\r\n      key: \"forthStep\",\r\n      label: \"Fine-grained analysis\",\r\n      isDone: false,\r\n      component: secondaryFrameComponent,\r\n    },\r\n    {\r\n      key: \"fifthStep\",\r\n      label: \"Interface composition\",\r\n      isDone: false,\r\n      component: ladConfigComponent,\r\n    },\r\n    {\r\n      key: \"finalStep\",\r\n      label: \"LAD config & generation\",\r\n      isDone: false,\r\n      component: finalComponent,\r\n    },\r\n  ]);\r\n\r\n  const [activeStep, setActiveStep] = useState(steps[0]);\r\n\r\n  const handleNext = () => {\r\n    window.scrollTo(0, 0);\r\n    if (steps[steps.length - 1].key === activeStep.key) {\r\n      alert(\"You have completed the generation process...\");\r\n      return;\r\n    }\r\n    const index = steps.findIndex((x) => x.key === activeStep.key);\r\n    setSteps((prevStep) =>\r\n      prevStep.map((x) => {\r\n        if (x.key === activeStep.key) x.isDone = true;\r\n        return x;\r\n      })\r\n    );\r\n    console.log(steps[index]);\r\n    setActiveStep(steps[index + 1]);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    window.scrollTo(0, 0);\r\n    const index = steps.findIndex((x) => x.key === activeStep.key);\r\n    if (index === 0) return;\r\n\r\n    setSteps((prevStep) =>\r\n      prevStep.map((x) => {\r\n        if (x.key === activeStep.key) x.isDone = false;\r\n        return x;\r\n      })\r\n    );\r\n    setActiveStep(steps[index - 1]);\r\n  };\r\n\r\n  const activateStep = (i) => {\r\n    window.scrollTo(0, 0);\r\n  \r\n    setSteps((prevStep) =>\r\n      prevStep.map((x) => {\r\n        if (x.key === activeStep.key) x.isDone = false;\r\n        return x;\r\n      })\r\n    );\r\n    setActiveStep(steps[i]);\r\n  };\r\n\r\n  const handlClose = () => {\r\n    props.onCloseWizard();\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n    <div className='step-progress'>\r\n        <StepZilla steps={wsteps}/>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DashboardSpecificationWizard;\r\n"]},"metadata":{},"sourceType":"module"}