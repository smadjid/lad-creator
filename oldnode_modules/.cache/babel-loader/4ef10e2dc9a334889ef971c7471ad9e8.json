{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\specification\\\\steps\\\\generate-component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport jsonfile from \"jsonfile\";\nimport dash from \"../../../data/template_dash.json\";\nimport { AppContext } from \"../specification-wizard\";\nimport \"./generate-component.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GenerateComponent = () => {\n  _s();\n\n  const [ladContext, setLadContext] = useContext(AppContext);\n  const filename = \"generated_dashboard\";\n  const fileData = JSON.stringify(dash);\n  const blob = new Blob([fileData], {\n    type: \"text/plain\"\n  });\n  const [mainPanel, setMainPanel] = useState();\n  const [comprehensionFrames, setComprehensionFrames] = useState([]);\n  const [dashMeta, setDashMeta] = useState();\n  const [file, setFile] = useState();\n\n  const generateMeta = () => {\n    setDashMeta({\n      id: null,\n      uid: \"cLV5GDCkz\",\n      title: ladContext.Title,\n      tags: [],\n      style: \"dark\",\n      timezone: \"browser\",\n      editable: true,\n      hideControls: false,\n      graphTooltip: 1\n    });\n  };\n\n  const generateMainFrame = () => {\n    setMainPanel({\n      type: ladContext.mainFrame.graphic,\n      title: ladContext.mainFrame.indicator,\n      gridPos: {\n        x: 0,\n        y: 0,\n        w: 12,\n        h: 9\n      },\n      id: 4,\n      mode: \"markdown\",\n      content: \"# title\"\n    });\n  };\n\n  const generateOneFrame = data => {\n    return {\n      type: data.graphic,\n      title: data.framename,\n      gridPos: {\n        x: 0,\n        y: 0,\n        w: 12,\n        h: 9\n      },\n      id: data.id,\n      mode: \"markdown\",\n      content: \"# title\"\n    };\n  };\n\n  const generateComprehensionFrames = () => {\n    //console.log(ladContext.comprehensionFrames); return;\n    ladContext.comprehensionFrames.map(f => {\n      setComprehensionFrames(comprehensionFrames.concat(generateOneFrame(f)));\n    });\n  };\n\n  const generateJsonStructure = () => {\n    generateMainFrame();\n    generateMeta();\n    generateComprehensionFrames();\n    console.log(comprehensionFrames); //  setFile(dashMeta);\n\n    const p = mainPanel.concat(comprehensionFrames);\n    const f = { ...file,\n      ...dashMeta\n    };\n    setFile({ ...file,\n      ...dashMeta,\n      panels: p\n    });\n    return;\n    setFile({\n      time: {\n        from: \"now-6h\",\n        to: \"now\"\n      },\n      timepicker: {\n        time_options: [],\n        refresh_intervals: []\n      },\n      templating: {\n        list: []\n      },\n      annotations: {\n        list: []\n      },\n      refresh: \"5s\",\n      schemaVersion: 17,\n      version: 0,\n      links: []\n    });\n  };\n\n  const saveJSonFile = () => {\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.download = `${filename}.json`;\n    link.href = url;\n    link.click();\n    var file = new File([\"Hello, world!\"], \" \"); //FileSaver.saveAs(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"  row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"bg-secondary card-header d-flex flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"p-2 col-sm-6\",\n        children: \"Dashboard JSon structure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"p-2 text-right col-sm-3\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"btn btn-primary btn-sm \",\n          onClick: generateJsonStructure,\n          children: \"Generat the structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"p-2 text-right col-sm-3\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"btn btn-success btn-sm \",\n          onClick: saveJSonFile,\n          children: \"Save the dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body bg-light\",\n      children: /*#__PURE__*/_jsxDEV(ReactJson, {\n        src: file,\n        collapsible: true,\n        view: \"dual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GenerateComponent, \"cIsS/pI+pgIhvOXEOR/QuXCCLSc=\");\n\n_c = GenerateComponent;\nexport default GenerateComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GenerateComponent\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/specification/steps/generate-component.js"],"names":["React","useState","useContext","ReactJson","jsonfile","dash","AppContext","GenerateComponent","ladContext","setLadContext","filename","fileData","JSON","stringify","blob","Blob","type","mainPanel","setMainPanel","comprehensionFrames","setComprehensionFrames","dashMeta","setDashMeta","file","setFile","generateMeta","id","uid","title","Title","tags","style","timezone","editable","hideControls","graphTooltip","generateMainFrame","mainFrame","graphic","indicator","gridPos","x","y","w","h","mode","content","generateOneFrame","data","framename","generateComprehensionFrames","map","f","concat","generateJsonStructure","console","log","p","panels","time","from","to","timepicker","time_options","refresh_intervals","templating","list","annotations","refresh","schemaVersion","version","links","saveJSonFile","url","URL","createObjectURL","link","document","createElement","download","href","click","File"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport ReactJson from \"react-json-view\";\r\nimport jsonfile from \"jsonfile\";\r\nimport dash from \"../../../data/template_dash.json\";\r\nimport { AppContext } from \"../specification-wizard\";\r\n\r\nimport \"./generate-component.css\";\r\nconst GenerateComponent = () => {\r\n  const [ladContext, setLadContext] = useContext(AppContext);\r\n\r\n  const filename = \"generated_dashboard\";\r\n  const fileData = JSON.stringify(dash);\r\n  const blob = new Blob([fileData], { type: \"text/plain\" });\r\n\r\n  const [mainPanel, setMainPanel] = useState();\r\n  const [comprehensionFrames, setComprehensionFrames] = useState([]);\r\n  const [dashMeta, setDashMeta] = useState();\r\n\r\n  const [file, setFile] = useState();\r\n\r\n  const generateMeta = () => {\r\n    setDashMeta({id: null,\r\n      uid: \"cLV5GDCkz\",\r\n      title: ladContext.Title,      \r\n      tags: [],\r\n      style: \"dark\",\r\n      timezone: \"browser\",\r\n      editable: true,\r\n      hideControls: false,\r\n      graphTooltip: 1,});\r\n  };\r\n\r\n  const generateMainFrame = () => {\r\n    setMainPanel({\r\n      type: ladContext.mainFrame.graphic,\r\n      title: ladContext.mainFrame.indicator,\r\n      gridPos: {\r\n        x: 0,\r\n        y: 0,\r\n        w: 12,\r\n        h: 9,\r\n      },\r\n      id: 4,\r\n      mode: \"markdown\",\r\n      content: \"# title\",\r\n    });\r\n  };\r\n\r\n  const generateOneFrame=(data)=>{\r\n    return({\r\n      type: data.graphic,\r\n      title: data.framename,\r\n      gridPos: {\r\n        x: 0,\r\n        y: 0,\r\n        w: 12,\r\n        h: 9,\r\n      },\r\n      id: data.id,\r\n      mode: \"markdown\",\r\n      content: \"# title\",\r\n    });\r\n  }\r\n  const generateComprehensionFrames = () => {\r\n    //console.log(ladContext.comprehensionFrames); return;\r\n    ladContext.comprehensionFrames.map(f=>{\r\n      setComprehensionFrames(comprehensionFrames.concat(generateOneFrame(f)));\r\n    })\r\n  }\r\n\r\n  const generateJsonStructure = () => {\r\n    generateMainFrame();\r\n    generateMeta();\r\n    generateComprehensionFrames();\r\n    console.log(comprehensionFrames);\r\n  //  setFile(dashMeta);\r\n  const p =mainPanel.concat(comprehensionFrames);\r\n    const f={...file,...dashMeta};\r\n    setFile({...file,...dashMeta,panels: p});\r\n    return;\r\n\r\n    setFile({\r\n      \r\n      time: {\r\n        from: \"now-6h\",\r\n        to: \"now\",\r\n      },\r\n      timepicker: {\r\n        time_options: [],\r\n        refresh_intervals: [],\r\n      },\r\n      templating: {\r\n        list: [],\r\n      },\r\n      annotations: {\r\n        list: [],\r\n      },\r\n      refresh: \"5s\",\r\n      schemaVersion: 17,\r\n      version: 0,\r\n      links: [],\r\n    });\r\n  };\r\n  const saveJSonFile = () => {\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.download = `${filename}.json`;\r\n    link.href = url;\r\n    link.click();\r\n\r\n    var file = new File([\"Hello, world!\"], \" \");\r\n    //FileSaver.saveAs(file);\r\n  };\r\n  return (\r\n    <div className=\"  row\">\r\n      <div class=\"bg-secondary card-header d-flex flex-row\">\r\n        <div class=\"p-2 col-sm-6\">Dashboard JSon structure</div>\r\n        <div class=\"p-2 text-right col-sm-3\">\r\n          <span\r\n            className=\"btn btn-primary btn-sm \"\r\n            onClick={generateJsonStructure}\r\n          >\r\n            Generat the structure\r\n          </span>\r\n        </div>\r\n        <div class=\"p-2 text-right col-sm-3\">\r\n          <span className=\"btn btn-success btn-sm \" onClick={saveJSonFile}>\r\n            Save the dashboard\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body bg-light\">\r\n        <ReactJson src={file} collapsible view=\"dual\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateComponent;\r\n"]},"metadata":{},"sourceType":"module"}