{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\library\\\\indicators.js\",\n    _s = $RefreshSig$();\n\nimport \"./library-view.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Actions from \"./indicators_lib/indicator_actions\";\nimport axios from \"axios\";\nimport { AddBoxRounded, EditRounded, HighlightOffRounded } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const IndicatorContext = /*#__PURE__*/React.createContext();\n\nfunction Indicators() {\n  _s();\n\n  const [indicators, setIndicators] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleModalSave = () => {\n    if (creationMode) axios.post(\"http://localhost:3001/indicators\", currentElement).then(() => {\n      setIndicators([...indicators, {\n        data: currentElement,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }]);\n      updateDisplay();\n    });else axios.put(\"http://localhost:3001/indicators\", currentElement).then(res => {\n      setIndicators(indicators.map(item => {\n        return item.id === currentElement.id ? {\n          id: item.id,\n          title: item.title,\n          description: item.description,\n          class: item.class\n        } : item;\n      }));\n      updateDisplay();\n    });\n    setShowModal(false);\n    updateDisplay();\n  };\n\n  const deleteIndicator = id => {\n    window.confirm(\"Are you sure you want to delete this type of indicators?\") ? axios.delete(`http://localhost:3001/indicators/${id}`).then(res => {\n      setIndicators(indicators.filter(item => {\n        return item.id !== id;\n      }));\n    }) : id = id;\n    updateDisplay();\n  };\n\n  const getIndicators = () => {\n    axios.get(\"http://localhost:3001/indicators\").then(res => {\n      setIndicators(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getIndicators();\n  }, []);\n\n  const updateDisplay = () => {\n    getIndicators();\n  };\n\n  const [currentElement, setCurrentElement] = useState();\n  const [creationMode, setCreationMode] = useState(true);\n  const IndicatorContext = [currentElement, setCurrentElement];\n\n  const CreateNewIndicator = () => {\n    const item = {\n      title: \"New\",\n      description: \"Description\",\n      chart: null,\n      class: \"Distribution\"\n    };\n    setCurrentElement(item);\n    setCreationMode(true);\n    setShowModal(true);\n    return;\n  };\n\n  const EditIndicator = item => {\n    setCurrentElement(item);\n    setCreationMode(false);\n    setShowModal(true);\n  };\n\n  const display = () => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: CreateNewIndicator,\n          children: [/*#__PURE__*/_jsxDEV(AddBoxRounded, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), \" \\xA0 New indicator type\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered table-hover table-dark table-striped text-md-start\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: indicators.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: item.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.class\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-primary\",\n                  onClick: () => EditIndicator(item),\n                  children: /*#__PURE__*/_jsxDEV(EditRounded, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm btn-outline-danger\",\n                  onClick: () => deleteIndicator(item.id),\n                  children: /*#__PURE__*/_jsxDEV(HighlightOffRounded, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(IndicatorContext.Provider, {\n    value: IndicatorContext,\n    children: /*#__PURE__*/_jsxDEV(Actions, {\n      title: \"un titre\",\n      show: showModal,\n      mode: \"Creation\",\n      indicators: indicators,\n      setIndicators: setIndicators,\n      updateDisplay: updateDisplay,\n      onClose: handleModalClose,\n      onSave: handleModalSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Indicators, \"UVOKEpCWb45TEsGbmOFrhuIVzmo=\");\n\n_c = Indicators;\nexport default Indicators;\n\nvar _c;\n\n$RefreshReg$(_c, \"Indicators\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/indicators.js"],"names":["React","useState","useEffect","Actions","axios","AddBoxRounded","EditRounded","HighlightOffRounded","IndicatorContext","createContext","Indicators","indicators","setIndicators","showModal","setShowModal","handleModalClose","handleModalSave","creationMode","post","currentElement","then","data","headers","updateDisplay","put","res","map","item","id","title","description","class","deleteIndicator","window","confirm","delete","filter","getIndicators","get","setCurrentElement","setCreationMode","CreateNewIndicator","chart","EditIndicator","display"],"mappings":"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","sourcesContent":["import \"./library-view.css\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Actions from \"./indicators_lib/indicator_actions\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AddBoxRounded,\r\n  EditRounded,\r\n  HighlightOffRounded,\r\n} from \"@material-ui/icons\";\r\n\r\nexport const IndicatorContext = React.createContext();\r\n\r\nfunction Indicators() {\r\n  const [indicators, setIndicators] = useState([]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleModalSave = () => {\r\n    if (creationMode)\r\n      axios\r\n        .post(\"http://localhost:3001/indicators\", currentElement)\r\n        .then(() => {\r\n          setIndicators([\r\n            ...indicators,\r\n            {\r\n              data: currentElement,\r\n              headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            },\r\n          ]);\r\n          updateDisplay();\r\n        });\r\n    else\r\n      axios\r\n        .put(\"http://localhost:3001/indicators\", currentElement)\r\n        .then((res) => {\r\n          setIndicators(\r\n            indicators.map((item) => {\r\n              return item.id === currentElement.id\r\n                ? {\r\n                    id: item.id,\r\n                    title: item.title,\r\n                    description: item.description,\r\n                    class: item.class,\r\n                  }\r\n                : item;\r\n            })\r\n          );\r\n          updateDisplay();\r\n        });\r\n\r\n    setShowModal(false);\r\n    updateDisplay();\r\n  };\r\n\r\n  const deleteIndicator = (id) => {\r\n    window.confirm(\r\n      \"Are you sure you want to delete this type of indicators?\"\r\n    )\r\n      ? axios\r\n          .delete(`http://localhost:3001/indicators/${id}`)\r\n          .then((res) => {\r\n            setIndicators(\r\n              indicators.filter((item) => {\r\n                return item.id !== id;\r\n              })\r\n            );\r\n          })\r\n      : (id = id);\r\n    updateDisplay();\r\n  };\r\n\r\n  const getIndicators = () => {\r\n    axios.get(\"http://localhost:3001/indicators\").then((res) => {\r\n      setIndicators(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getIndicators();\r\n  }, []);\r\n\r\n  const updateDisplay = () => {\r\n    getIndicators();\r\n  };\r\n\r\n\r\n  const [currentElement, setCurrentElement] = useState();\r\n  const [creationMode, setCreationMode] = useState(true);\r\n  const IndicatorContext = [currentElement, setCurrentElement];\r\n\r\n  const CreateNewIndicator = () => {\r\n    const item = {\r\n      title: \"New\",\r\n      description: \"Description\",\r\n      chart: null,\r\n      class: \"Distribution\",\r\n    };\r\n\r\n    setCurrentElement(item);\r\n    setCreationMode(true);\r\n    setShowModal(true);\r\n\r\n    return;\r\n  };\r\n  const EditIndicator = (item) => {\r\n    setCurrentElement(item);\r\n    setCreationMode(false);\r\n    setShowModal(true);\r\n  };\r\n  const display =()=>{\r\n  return (\r\n    \r\n<>\r\n      <div>\r\n        <button className=\"btn btn-success\" onClick={CreateNewIndicator}>\r\n          <AddBoxRounded /> &nbsp; New indicator type\r\n        </button>\r\n      </div>\r\n      <table className=\"table table-bordered table-hover table-dark table-striped text-md-start\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Title</th>\r\n            <th scope=\"col\">Type</th>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {indicators.map((item) => {\r\n            return (\r\n              <tr key={item.id}>\r\n                <th scope=\"row\">{item.id}</th>\r\n                <td>{item.title}</td>\r\n                <td>{item.class}</td>               \r\n                <td>{item.description}</td>\r\n\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-primary\"\r\n                    onClick={() => EditIndicator(item)}\r\n                  >\r\n                    <EditRounded />\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-danger\"\r\n                    onClick={() => deleteIndicator(item.id)}\r\n                  >\r\n                    <HighlightOffRounded />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n  </>  \r\n  )};\r\n  return(\r\n    <IndicatorContext.Provider value={IndicatorContext}>\r\n      <Actions\r\n        title=\"un titre\"\r\n        show={showModal}\r\n        mode=\"Creation\"\r\n        indicators={indicators}\r\n        setIndicators={setIndicators}\r\n        updateDisplay={updateDisplay}\r\n        onClose={handleModalClose}\r\n        onSave={handleModalSave}\r\n      />\r\n      </IndicatorContext.Provider>\r\n  )\r\n}\r\n\r\nexport default Indicators;"]},"metadata":{},"sourceType":"module"}