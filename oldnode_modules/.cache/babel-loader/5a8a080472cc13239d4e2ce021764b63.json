{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\library\\\\chart-upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { VizContext } from \"./visualizations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChartUpload = props => {\n  _s();\n\n  const [element, setElement, chart, setChart] = useContext(VizContext);\n  const [picture, setPicture] = useState(null);\n  const [imgData, setImgData] = useState(null);\n\n  const encodeChart = blob => {\n    if (!blob) return;\n    const {\n      data\n    } = blob;\n    const img = new Buffer.from(data).toString(\"ascii\");\n    return img;\n  };\n\n  const onChangePicture = e => {\n    if (e.target.files[0]) {\n      setPicture(e.target.files[0]);\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", () => {\n        props.onChartChange(reader.result);\n      });\n      reader.readAsDataURL(e.target.files[0]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formInstructionsDiv formElement\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructionsText\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register_profile_image\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"chart\",\n        type: \"file\",\n        onChange: onChangePicture,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart_box\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChartUpload, \"l20MWevlXlChbbrlReobX/km+8s=\");\n\n_c = ChartUpload;\nexport default ChartUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartUpload\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/chart-upload.js"],"names":["React","useState","useContext","VizContext","ChartUpload","props","element","setElement","chart","setChart","picture","setPicture","imgData","setImgData","encodeChart","blob","data","img","Buffer","from","toString","onChangePicture","e","target","files","reader","FileReader","addEventListener","onChartChange","result","readAsDataURL"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,EAAsBC,KAAtB,EAA6BC,QAA7B,IAAyCP,UAAU,CAACC,UAAD,CAAzD;AAEA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMa,WAAW,GAAIC,IAAD,IAAU;AAC5B,QAAI,CAACA,IAAL,EAAW;AACX,UAAM;AAAEC,MAAAA;AAAF,QAAWD,IAAjB;AACA,UAAME,GAAG,GAAG,IAAIC,MAAM,CAACC,IAAX,CAAgBH,IAAhB,EAAsBI,QAAtB,CAA+B,OAA/B,CAAZ;AACA,WAAOH,GAAP;AACD,GALD;;AAOA,QAAMI,eAAe,GAAIC,CAAD,IAAO;AAC7B,QAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,EAAuB;AACrBb,MAAAA,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAV;AACA,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AAEpCtB,QAAAA,KAAK,CAACuB,aAAN,CAAoBH,MAAM,CAACI,MAA3B;AACD,OAHD;AAIAJ,MAAAA,MAAM,CAACK,aAAP,CAAqBR,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB;AACD;AACF,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAEH,eAHZ;AAIE,QAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAzCD;;GAAMjB,W;;KAAAA,W;AA2CN,eAAeA,WAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { VizContext } from \"./visualizations\";\r\n\r\nconst ChartUpload = (props) => {\r\n  const [element, setElement, chart, setChart] = useContext(VizContext);\r\n\r\n  const [picture, setPicture] = useState(null);\r\n  const [imgData, setImgData] = useState(null);\r\n\r\n  const encodeChart = (blob) => {\r\n    if (!blob) return;\r\n    const { data } = blob;\r\n    const img = new Buffer.from(data).toString(\"ascii\");\r\n    return img;\r\n  };\r\n\r\n  const onChangePicture = (e) => {\r\n    if (e.target.files[0]) {\r\n      setPicture(e.target.files[0]);\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        \r\n        props.onChartChange(reader.result);\r\n      });\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"formInstructionsDiv formElement\">\r\n      <p className=\"instructionsText\" />\r\n      <div className=\"register_profile_image\">\r\n        <input\r\n          id=\"chart\"\r\n          type=\"file\"\r\n          onChange={onChangePicture}\r\n          accept=\"image/*\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"chart_box\">\r\n        {/* <img className=\"chart_box-image\" src={encodeChart(element.chart)} /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartUpload;\r\n"]},"metadata":{},"sourceType":"module"}