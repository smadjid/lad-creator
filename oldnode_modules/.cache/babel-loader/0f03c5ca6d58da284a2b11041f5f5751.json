{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\library\\\\panels.js\",\n    _s = $RefreshSig$();\n\nimport \"./library-view.css\";\nimport { useState, useEffect } from \"react\";\nimport AddPanel from \"./panels_lib/add_panel\";\nimport Edit from \"./panels_lib/edit_panel\";\nimport Delete from \"./panels_lib/delete_panel\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Panels() {\n  _s();\n\n  const [panels, setPanels] = useState([]);\n  const [indicators, setIndicators] = useState([]);\n  const [charts, setCharts] = useState([]);\n\n  const getPanels = () => {\n    axios.get(\"http://localhost:3001/panels\").then(res => {\n      setPanels(res.data);\n    });\n  };\n\n  const getIndicators = () => {\n    axios.get(\"http://localhost:3001/indicators\").then(res => {\n      setIndicators(res.data);\n    });\n  };\n\n  const getCharts = () => {\n    axios.get(\"http://localhost:3001/visualizations\").then(res => {\n      setCharts(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getPanels();\n  }, [panels]);\n  useEffect(() => {\n    getIndicators();\n  }, [indicators]);\n  useEffect(() => {\n    getCharts();\n  }, [charts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddPanel, {\n      panels: panels,\n      setPanels: setPanels,\n      indicators: indicators,\n      charts: charts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Panels, \"zs3jkcB8I3VSdtpqg5O90qHspvw=\");\n\n_c = Panels;\nexport default Panels;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panels\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/panels.js"],"names":["useState","useEffect","AddPanel","Edit","Delete","axios","Panels","panels","setPanels","indicators","setIndicators","charts","setCharts","getPanels","get","then","res","data","getIndicators","getCharts"],"mappings":";;;AAAA,OAAO,oBAAP;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMa,SAAS,GAAG,MAAM;AACtBR,IAAAA,KAAK,CAACS,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CAAgDC,GAAD,IAAS;AACtDR,MAAAA,SAAS,CAACQ,GAAG,CAACC,IAAL,CAAT;AACD,KAFD;AAGD,GAJD;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAC1Bb,IAAAA,KAAK,CAACS,GAAN,CAAU,kCAAV,EAA8CC,IAA9C,CAAoDC,GAAD,IAAS;AAC1DN,MAAAA,aAAa,CAACM,GAAG,CAACC,IAAL,CAAb;AACD,KAFD;AAGD,GAJD;;AAMA,QAAME,SAAS,GAAG,MAAM;AACtBd,IAAAA,KAAK,CAACS,GAAN,CAAU,sCAAV,EAAkDC,IAAlD,CAAwDC,GAAD,IAAS;AAC9DJ,MAAAA,SAAS,CAACI,GAAG,CAACC,IAAL,CAAT;AACD,KAFD;AAGD,GAJD;;AAMAhB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACN,MAAD,CAFM,CAAT;AAIAN,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACT,UAAD,CAFM,CAAT;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,SAAS;AACV,GAFQ,EAEN,CAACR,MAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BAEA,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEJ,MAAlB;AAA0B,MAAA,SAAS,EAAEC,SAArC;AAAgD,MAAA,UAAU,EAAEC,UAA5D;AAAwE,MAAA,MAAM,EAAEE;AAAhF;AAAA;AAAA;AAAA;AAAA,YAFA,eAGJ;AAAA;AAAA;AAAA;AAAA,YAHI;AAAA,kBADF;AAUD;;GA7CQL,M;;KAAAA,M;AA+CT,eAAeA,MAAf","sourcesContent":["import \"./library-view.css\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport AddPanel from \"./panels_lib/add_panel\";\r\nimport Edit from \"./panels_lib/edit_panel\";\r\nimport Delete from \"./panels_lib/delete_panel\";\r\nimport axios from \"axios\";\r\n\r\nfunction Panels() { \r\n  const [panels, setPanels] = useState([]);\r\n  const [indicators, setIndicators] = useState([]);\r\n  const [charts, setCharts] = useState([]);\r\n\r\n  const getPanels = () => {\r\n    axios.get(\"http://localhost:3001/panels\").then((res) => {\r\n      setPanels(res.data);\r\n    });\r\n  };\r\n\r\n  const getIndicators = () => {\r\n    axios.get(\"http://localhost:3001/indicators\").then((res) => {\r\n      setIndicators(res.data);\r\n    });\r\n  };\r\n\r\n  const getCharts = () => {\r\n    axios.get(\"http://localhost:3001/visualizations\").then((res) => {\r\n      setCharts(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPanels();\r\n  }, [panels]);\r\n\r\n  useEffect(() => {\r\n    getIndicators();\r\n  }, [indicators]);\r\n\r\n  useEffect(() => {\r\n    getCharts();\r\n  }, [charts]);\r\n\r\n  return (\r\n    <>\r\n   \r\n    <AddPanel panels={panels} setPanels={setPanels} indicators={indicators} charts={charts}/>\r\n<hr />\r\n    \r\n      \r\n      \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Panels;\r\n"]},"metadata":{},"sourceType":"module"}