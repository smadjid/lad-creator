{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\library\\\\decisions_lib\\\\tabular_display.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { useTable } from \"react-table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TabularDisplay = ({\n  columns,\n  data\n}) => {\n  _s();\n\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }); // Render the UI for your table\n\n  return /*#__PURE__*/_jsxDEV(MaUTable, { ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(TableRow, { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(TableCell, { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(TableRow, { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(TableCell, { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TabularDisplay, \"Xnx1aw5Ajdh27qgCo7ZNFYuAvQ0=\", false, function () {\n  return [useTable];\n});\n\n_c = TabularDisplay;\nexport default TabularDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"TabularDisplay\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/decisions_lib/tabular_display.js"],"names":["React","MaUTable","TableBody","TableCell","TableHead","TableRow","useTable","TabularDisplay","columns","data","getTableProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,SAASC,QAAT,QAAyB,aAAzB;;;AAIA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAuB;AAAA;;AAC5C;AACA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,YAAjB;AAA+BC,IAAAA,IAA/B;AAAqCC,IAAAA;AAArC,MAAoDP,QAAQ,CAAC;AACjEE,IAAAA,OADiE;AAEjEC,IAAAA;AAFiE,GAAD,CAAlE,CAF4C,CAO5C;;AACA,sBACE,QAAC,QAAD,OAAcC,aAAa,EAA3B;AAAA,4BACE,QAAC,SAAD;AAAA,gBACGC,YAAY,CAACG,GAAb,CAAkBC,WAAD,iBAChB,QAAC,QAAD,OAAcA,WAAW,CAACC,mBAAZ,EAAd;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAyBI,MAAD,iBACvB,QAAC,SAAD,OAAeA,MAAM,CAACC,cAAP,EAAf;AAAA,oBACGD,MAAM,CAACE,MAAP,CAAc,QAAd;AADH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,SAAD;AAAA,gBACGR,IAAI,CAACE,GAAL,CAAS,CAACO,GAAD,EAAMC,CAAN,KAAY;AACpBT,QAAAA,UAAU,CAACQ,GAAD,CAAV;AACA,4BACE,QAAC,QAAD,OAAcA,GAAG,CAACE,WAAJ,EAAd;AAAA,oBACGF,GAAG,CAACG,KAAJ,CAAUV,GAAV,CAAeW,IAAD,IAAU;AACvB,gCACE,QAAC,SAAD,OAAeA,IAAI,CAACC,YAAL,EAAf;AAAA,wBACGD,IAAI,CAACL,MAAL,CAAY,MAAZ;AADH;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAWD,OAbA;AADH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAvCD;;GAAMb,c;UAEsDD,Q;;;KAFtDC,c;AAwCN,eAAeA,cAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport MaUTable from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport { useTable } from \"react-table\";\r\n\r\n\r\n\r\nconst TabularDisplay = ({ columns, data }) => {\r\n  // Use the state and functions returned from useTable to build your UI\r\n  const { getTableProps, headerGroups, rows, prepareRow } = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <MaUTable {...getTableProps()}>\r\n      <TableHead>\r\n        {headerGroups.map((headerGroup) => (\r\n          <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <TableCell {...column.getHeaderProps()}>\r\n                {column.render(\"Header\")}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        ))}\r\n      </TableHead>\r\n      <TableBody>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <TableRow {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                return (\r\n                  <TableCell {...cell.getCellProps()}>\r\n                    {cell.render(\"Cell\")}\r\n                  </TableCell>\r\n                );\r\n              })}\r\n            </TableRow>\r\n          );\r\n        })}\r\n      </TableBody>\r\n    </MaUTable>\r\n  );\r\n};\r\nexport default TabularDisplay;\r\n"]},"metadata":{},"sourceType":"module"}