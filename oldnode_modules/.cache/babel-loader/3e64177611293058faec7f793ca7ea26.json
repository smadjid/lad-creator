{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\library\\\\frames.js\",\n    _s = $RefreshSig$();\n\nimport \"./library-view.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Actions from \"./frames_lib/frame_actions\";\nimport axios from \"axios\";\nimport { AddBoxRounded, EditRounded, HighlightOffRounded, Loupe, RemoveCircle } from \"@material-ui/icons\";\nimport FrameItem from \"./frames_lib/frame_items\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FrameContext = /*#__PURE__*/React.createContext();\n\nfunction Frames() {\n  _s();\n\n  const [frames, setFrames] = useState([]);\n  const [panels, setPanels] = useState([]);\n  const [cpanels, setCPanels] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [showItemModal, setShowItemModal] = useState(false);\n  const [currentFrame, setCurrentFrame] = useState();\n  const [currentPanel, setCurrentPanel] = useState();\n  const [fList, setfList] = useState();\n  const [compositeMode, setCompositeMode] = useState(false);\n  const frameContext = [currentFrame, setCurrentFrame, currentPanel, setCurrentPanel, fList, setfList, panels, cpanels];\n  const [creationMode, setCreationMode] = useState(true);\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleItemModalClose = () => {\n    setShowItemModal(false);\n  };\n\n  const handleItemModalSave = () => {\n    let element = currentFrame;\n    let flist = {\n      isComposite: compositeMode,\n      frame_id: currentFrame.id,\n      panel_id: currentPanel.id\n    };\n    axios.post(\"http://localhost:3001/flist\", flist).then(() => {\n      updateDisplay();\n    });\n    setShowItemModal(false);\n    updateDisplay();\n  };\n\n  const handleModalSave = () => {\n    let element = currentFrame; //return;\n\n    if (creationMode) axios.post(\"http://localhost:3001/frames\", element).then(() => {\n      setFrames([...frames, {\n        data: element,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }]);\n      updateDisplay();\n    });else axios.put(\"http://localhost:3001/frames\", element).then(res => {\n      setFrames(frames.map(item => {\n        return item.id === element.id ? {\n          id: item.id,\n          title: item.title,\n          description: item.description,\n          class: \"\"\n        } : item;\n      }));\n      updateDisplay();\n    });\n    setShowModal(false);\n    updateDisplay();\n  };\n\n  const deleteFrame = id => {\n    window.confirm(\"Are you sure you want to delete this type of frame?\") ? axios.delete(`http://localhost:3001/frames/${id}`).then(res => {\n      setFrames(frames.filter(item => {\n        return item.id !== id;\n      }));\n    }) : id = id;\n    updateDisplay();\n  };\n\n  const getFrames = () => {\n    axios.get(\"http://localhost:3001/frames\").then(res => {\n      setFrames(res.data);\n    });\n  };\n\n  const getFrameItems = item => {\n    if (!fList) return [];\n    if (!item) return [];\n    let elts = fList.filter(i => i.frame_id === item.id);\n    return elts;\n  };\n\n  const getPanByID = (id, isComposite) => {\n    let elt = {\n      title: \" \",\n      description: \" \"\n    };\n\n    if (isComposite) {\n      if (cpanels) elt = cpanels.find(x => x.id === id);\n    } else {\n      if (panels) elt = panels.find(x => x.id === id);\n    }\n\n    if (!elt) elt = {\n      title: \" \",\n      description: \" \"\n    };\n    return elt;\n  };\n\n  const dropCPanItem = id => {\n    let i = 0;\n    window.confirm(\"Are you sure you want to delete this panel?\") ? axios.delete(`http://localhost:3001/flist/${id}`).then(res => {\n      setfList(fList.filter(item => {\n        return item.id !== id;\n      }));\n    }) : i = 1;\n  };\n\n  const getPanels = () => {\n    axios.get(\"http://localhost:3001/panels\").then(res => {\n      setPanels(res.data);\n    });\n  };\n\n  const getCPanels = () => {\n    axios.get(\"http://localhost:3001/cpanels\").then(res => {\n      setCPanels(res.data);\n    });\n  };\n\n  const getfList = () => {\n    axios.get(\"http://localhost:3001/flist\").then(res => {\n      setfList(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getFrames();\n    getPanels();\n    getCPanels();\n    getfList();\n  }, []);\n\n  const updateDisplay = () => {\n    getFrames();\n    getPanels();\n    getCPanels();\n    getfList();\n  };\n\n  const fetchPanelElement = id => {\n    if (typeof id === \"undefined\") return {\n      title: null,\n      chart: null\n    };else {\n      let elt = panels.find(x => x.id === id);\n      if (elt) return elt;else return {\n        title: null,\n        description: null\n      };\n    }\n  };\n\n  const AddSimplePanel = item => {\n    setCompositeMode(false);\n    let elt = fList.find(x => x.frame_id === item.id);\n    setCurrentFrame(item);\n    setCurrentPanel(panels[0]);\n    setShowItemModal(true);\n  };\n\n  const AddCompositePanel = item => {\n    setCompositeMode(true);\n    let elt = fList.find(x => x.frame_id === item.id);\n    setCurrentFrame(item);\n    setCurrentPanel(cpanels[0]);\n    setShowItemModal(true);\n  };\n\n  const CreateNewFrame = () => {\n    const item = {\n      title: \"NewFrame\",\n      description: \"Description\"\n    };\n    setCurrentFrame(item);\n    setCreationMode(true);\n    setShowModal(true);\n    return;\n  };\n\n  const EditFrame = item => {\n    setCurrentFrame(item);\n    setCreationMode(false);\n    setShowModal(true);\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(FrameContext.Provider, {\n    value: frameContext,\n    children: [/*#__PURE__*/_jsxDEV(Actions, {\n      title: \"un titre\",\n      show: showModal,\n      mode: \"Creation\",\n      frames: frames,\n      setFrames: setFrames,\n      updateDisplay: updateDisplay,\n      onClose: handleModalClose,\n      onSave: handleModalSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FrameItem, {\n      title: \"un titre\",\n      show: showItemModal,\n      mode: \"Creation\",\n      frames: frames,\n      isComposite: compositeMode,\n      setFrames: setFrames,\n      updateDisplay: updateDisplay,\n      onClose: handleItemModalClose,\n      onSave: handleItemModalSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: CreateNewFrame,\n        children: [/*#__PURE__*/_jsxDEV(AddBoxRounded, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), \" \\xA0 New Frame Type\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-hover table-dark table-striped text-md-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Panels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: frames.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                children: item.class\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-sm btn-outline-info\",\n                role: \"button\",\n                onClick: () => AddSimplePanel(item),\n                children: [/*#__PURE__*/_jsxDEV(Loupe, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), \" Simple Panel\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-sm btn-outline-info\",\n                role: \"button\",\n                onClick: () => AddCompositePanel(item),\n                children: [/*#__PURE__*/_jsxDEV(Loupe, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), \" Composite Panel\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"list-group-flush\",\n                children: getFrameItems(item).map(i => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-group-item d-flex justify-content-between align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      children: getPanByID(i.panel_id, i.isComposite).title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        children: i.isComposite ? 'Composite' : 'Simple'\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 314,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        role: \"button\",\n                        className: \"text-danger btn-sm\",\n                        onClick: () => dropCPanItem(i.id),\n                        children: /*#__PURE__*/_jsxDEV(RemoveCircle, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 320,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 27\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                children: fetchPanelElement(item.id).title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-outline-primary\",\n                onClick: () => EditFrame(item),\n                children: /*#__PURE__*/_jsxDEV(EditRounded, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-outline-danger\",\n                onClick: () => deleteFrame(item.id),\n                children: /*#__PURE__*/_jsxDEV(HighlightOffRounded, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Frames, \"94u0nFw8WafC/RMn9v7uCojBWdU=\");\n\n_c = Frames;\nexport default Frames;\n\nvar _c;\n\n$RefreshReg$(_c, \"Frames\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/frames.js"],"names":["React","useState","useEffect","Actions","axios","AddBoxRounded","EditRounded","HighlightOffRounded","Loupe","RemoveCircle","FrameItem","FrameContext","createContext","Frames","frames","setFrames","panels","setPanels","cpanels","setCPanels","showModal","setShowModal","showItemModal","setShowItemModal","currentFrame","setCurrentFrame","currentPanel","setCurrentPanel","fList","setfList","compositeMode","setCompositeMode","frameContext","creationMode","setCreationMode","handleModalClose","handleItemModalClose","handleItemModalSave","element","flist","isComposite","frame_id","id","panel_id","post","then","updateDisplay","handleModalSave","data","headers","put","res","map","item","title","description","class","deleteFrame","window","confirm","delete","filter","getFrames","get","getFrameItems","elts","i","getPanByID","elt","find","x","dropCPanItem","getPanels","getCPanels","getfList","fetchPanelElement","chart","AddSimplePanel","AddCompositePanel","CreateNewFrame","EditFrame"],"mappings":"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","sourcesContent":["import \"./library-view.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Actions from \"./frames_lib/frame_actions\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AddBoxRounded,\r\n  EditRounded,\r\n  HighlightOffRounded,\r\n  Loupe,\r\n  RemoveCircle,\r\n} from \"@material-ui/icons\";\r\nimport FrameItem from \"./frames_lib/frame_items\";\r\n\r\nexport const FrameContext = React.createContext();\r\n\r\nfunction Frames() {\r\n  const [frames, setFrames] = useState([]);\r\n  const [panels, setPanels] = useState([]);\r\n  const [cpanels, setCPanels] = useState([]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showItemModal, setShowItemModal] = useState(false);\r\n\r\n  const [currentFrame, setCurrentFrame] = useState();\r\n  const [currentPanel, setCurrentPanel] = useState();\r\n  const [fList, setfList] = useState();\r\n\r\n  const [compositeMode, setCompositeMode] = useState(false);\r\n\r\n  const frameContext = [\r\n    currentFrame,\r\n    setCurrentFrame,\r\n    currentPanel,\r\n    setCurrentPanel,\r\n    fList,\r\n    setfList,\r\n    panels,\r\n    cpanels,\r\n  ];\r\n\r\n  const [creationMode, setCreationMode] = useState(true);\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  const handleItemModalClose = () => {\r\n    setShowItemModal(false);\r\n  };\r\n\r\n  const handleItemModalSave = () => {\r\n    let element = currentFrame;\r\n    let flist = {\r\n      isComposite: compositeMode,\r\n      frame_id: currentFrame.id,\r\n      panel_id: currentPanel.id,\r\n    };\r\n    axios.post(\"http://localhost:3001/flist\", flist).then(() => {\r\n      updateDisplay();\r\n    });\r\n\r\n    setShowItemModal(false);\r\n    updateDisplay();\r\n  };\r\n\r\n  const handleModalSave = () => {\r\n    let element = currentFrame;\r\n    //return;\r\n    if (creationMode)\r\n      axios.post(\"http://localhost:3001/frames\", element).then(() => {\r\n        setFrames([\r\n          ...frames,\r\n          {\r\n            data: element,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          },\r\n        ]);\r\n\r\n        updateDisplay();\r\n      });\r\n    else\r\n      axios.put(\"http://localhost:3001/frames\", element).then((res) => {\r\n        setFrames(\r\n          frames.map((item) => {\r\n            return item.id === element.id\r\n              ? {\r\n                  id: item.id,\r\n                  title: item.title,\r\n                  description: item.description,\r\n                  class: \"\",\r\n                }\r\n              : item;\r\n          })\r\n        );\r\n        updateDisplay();\r\n      });\r\n\r\n    setShowModal(false);\r\n    updateDisplay();\r\n  };\r\n\r\n  const deleteFrame = (id) => {\r\n    window.confirm(\"Are you sure you want to delete this type of frame?\")\r\n      ? axios.delete(`http://localhost:3001/frames/${id}`).then((res) => {\r\n          setFrames(\r\n            frames.filter((item) => {\r\n              return item.id !== id;\r\n            })\r\n          );\r\n        })\r\n      : (id = id);\r\n    updateDisplay();\r\n  };\r\n\r\n  const getFrames = () => {\r\n    axios.get(\"http://localhost:3001/frames\").then((res) => {\r\n      setFrames(res.data);\r\n    });\r\n  };\r\n  const getFrameItems = (item) => {\r\n    if (!fList) return [];\r\n    if (!item) return [];\r\n    let elts = fList.filter((i) => i.frame_id === item.id);\r\n    return elts;\r\n  };\r\n\r\n  const getPanByID = (id, isComposite) => {\r\n      \r\n    let elt = {\r\n      title: \" \",\r\n      description: \" \",\r\n    };\r\n    if (isComposite) {\r\n      if (cpanels) elt = cpanels.find((x) => x.id === id);\r\n    } else {\r\n      if (panels) elt = panels.find((x) => x.id === id);\r\n    }\r\n    \r\n    if (!elt)\r\n      elt = {\r\n        title: \" \",\r\n        description: \" \",\r\n      };\r\n\r\n    return elt;\r\n  };\r\n\r\n  const dropCPanItem = (id) => {\r\n    let i = 0;\r\n    window.confirm(\"Are you sure you want to delete this panel?\")\r\n      ? axios.delete(`http://localhost:3001/flist/${id}`).then((res) => {\r\n          setfList(\r\n            fList.filter((item) => {\r\n              return item.id !== id;\r\n            })\r\n          );\r\n        })\r\n      : (i = 1);\r\n  };\r\n\r\n  const getPanels = () => {\r\n    axios.get(\"http://localhost:3001/panels\").then((res) => {\r\n      setPanels(res.data);\r\n    });\r\n  };\r\n\r\n  const getCPanels = () => {\r\n    axios.get(\"http://localhost:3001/cpanels\").then((res) => {\r\n      setCPanels(res.data);\r\n    });\r\n  };\r\n\r\n  const getfList = () => {\r\n    axios.get(\"http://localhost:3001/flist\").then((res) => {\r\n      setfList(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFrames();\r\n    getPanels();\r\n    getCPanels();\r\n    getfList();\r\n  }, []);\r\n\r\n  const updateDisplay = () => {\r\n    getFrames();\r\n    getPanels();\r\n    getCPanels();\r\n    getfList();\r\n  };\r\n\r\n  const fetchPanelElement = (id) => {\r\n    if (typeof id === \"undefined\") return { title: null, chart: null };\r\n    else {\r\n      let elt = panels.find((x) => x.id === id);\r\n      if (elt) return elt;\r\n      else return { title: null, description: null };\r\n    }\r\n  };\r\n\r\n  const AddSimplePanel = (item) => {\r\n    setCompositeMode(false);\r\n    let elt = fList.find((x) => x.frame_id === item.id);\r\n\r\n    setCurrentFrame(item);\r\n    setCurrentPanel(panels[0]);\r\n    setShowItemModal(true);\r\n  };\r\n\r\n  const AddCompositePanel = (item) => {\r\n    setCompositeMode(true);\r\n    let elt = fList.find((x) => x.frame_id === item.id);\r\n\r\n    setCurrentFrame(item);\r\n    setCurrentPanel(cpanels[0]);\r\n    setShowItemModal(true);\r\n  };\r\n\r\n  const CreateNewFrame = () => {\r\n    const item = {\r\n      title: \"NewFrame\",\r\n      description: \"Description\",\r\n    };\r\n    setCurrentFrame(item);\r\n    setCreationMode(true);\r\n    setShowModal(true);\r\n\r\n    return;\r\n  };\r\n\r\n  const EditFrame = (item) => {\r\n    \r\n    setCurrentFrame(item);\r\n    setCreationMode(false);\r\n    setShowModal(true);\r\n    return;\r\n  };\r\n  return (\r\n    <FrameContext.Provider value={frameContext}>\r\n      <Actions\r\n        title=\"un titre\"\r\n        show={showModal}\r\n        mode=\"Creation\"\r\n        frames={frames}\r\n        setFrames={setFrames}\r\n        updateDisplay={updateDisplay}\r\n        onClose={handleModalClose}\r\n        onSave={handleModalSave}\r\n      />\r\n      <FrameItem\r\n        title=\"un titre\"\r\n        show={showItemModal}\r\n        mode=\"Creation\"\r\n        frames={frames}\r\n        isComposite={compositeMode}\r\n        setFrames={setFrames}\r\n        updateDisplay={updateDisplay}\r\n        onClose={handleItemModalClose}\r\n        onSave={handleItemModalSave}\r\n      />\r\n\r\n      <div>\r\n        <button className=\"btn btn-success\" onClick={CreateNewFrame}>\r\n          <AddBoxRounded /> &nbsp; New Frame Type\r\n        </button>\r\n      </div>\r\n      <table className=\"table table-bordered table-hover table-dark table-striped text-md-start\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Title</th>\r\n            <th scope=\"col\">Class</th>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\">Panels</th>\r\n            <th scope=\"col\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {frames.map((item) => {\r\n            return (\r\n              <tr key={item.id}>\r\n                <th scope=\"row\">{item.id}</th>\r\n                <td>\r\n                  <h6>{item.title}</h6>\r\n                </td>\r\n                <td>\r\n                  <i>{item.class}</i>\r\n                </td>\r\n                <td>{item.description}</td>\r\n                <td>\r\n                  <span\r\n                    className=\"btn-sm btn-outline-info\"\r\n                    role=\"button\"\r\n                    onClick={() => AddSimplePanel(item)}\r\n                  >\r\n                    <Loupe /> Simple Panel\r\n                  </span>\r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <span\r\n                    className=\"btn-sm btn-outline-info\"\r\n                    role=\"button\"\r\n                    onClick={() => AddCompositePanel(item)}\r\n                  >\r\n                    <Loupe /> Composite Panel\r\n                  </span>\r\n                  <br />\r\n                  <br />\r\n                  <ol className=\"list-group-flush\">\r\n                    {getFrameItems(item).map((i) => {\r\n                      return (\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                          <h6>{getPanByID(i.panel_id, i.isComposite).title}</h6>\r\n                          <div>\r\n                          <i>{i.isComposite? 'Composite':'Simple'}</i>\r\n                          <span\r\n                            role=\"button\"\r\n                            className=\"text-danger btn-sm\"\r\n                            onClick={() => dropCPanItem(i.id)}\r\n                          >\r\n                            <RemoveCircle />\r\n                          </span>{\" \"}</div>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ol>\r\n                  <i>{fetchPanelElement(item.id).title}</i>\r\n                  {/*  <div className=\"chart_box\">                  \r\n                    <img alt=\"Chart\" src={decodeChart(fetchPanelElement(item.visualization_id).chart)} /> </div>*/}\r\n                </td>\r\n\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-primary\"\r\n                    onClick={() => EditFrame(item)}\r\n                  >\r\n                    <EditRounded />\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-danger\"\r\n                    onClick={() => deleteFrame(item.id)}\r\n                  >\r\n                    <HighlightOffRounded />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </FrameContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Frames;\r\n"]},"metadata":{},"sourceType":"module"}