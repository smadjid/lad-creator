{"ast":null,"code":"import _objectSpread from\"C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"../library-view.css\";import React,{useContext,useState}from\"react\";import Modal from\"react-bootstrap/Modal\";import{Button}from\"react-bootstrap\";import{PanelContext}from\"../panels\";import Draggable from\"react-draggable\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var chartContext=/*#__PURE__*/React.createContext();var Actions=function Actions(props){var _useContext=useContext(PanelContext),_useContext2=_slicedToArray(_useContext,8),currentPanel=_useContext2[0],setCurrentPanel=_useContext2[1],currentIndicator=_useContext2[2],setCurrentIndicator=_useContext2[3],currentVisualization=_useContext2[4],setCurrentVisualization=_useContext2[5],indicators=_useContext2[6],visualizations=_useContext2[7];var getIndElement=function getIndElement(i){indicators.map(function(item){if(item.id==i)setCurrentIndicator(item);});};var getVizElement=function getVizElement(i){visualizations.map(function(item){if(item.id==i)setCurrentVisualization(item);});};var decodeChart=function decodeChart(elt){if(!elt)return;var blob=elt.chart;if(typeof blob===\"string\")return blob;var data=blob.data;var img=new Buffer.from(data).toString(\"ascii\");return img;};return/*#__PURE__*/_jsx(_Fragment,{children:currentPanel===undefined?\" \":/*#__PURE__*/_jsx(Draggable,{children:/*#__PURE__*/_jsxs(Modal,{show:props.show,backdrop:\"static\",keyboard:true,size:\"lg\",\"aria-labelledby\":\"contained-modal-title-vcenter\",dialogClassName:\"modal-style\",scrollable:true,centered:true,children:[/*#__PURE__*/_jsx(Modal.Header,{children:/*#__PURE__*/_jsx(Modal.Title,{children:currentPanel.title})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsx(\"table\",{className:\"table table-dark\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Panel Title\",onChange:function onChange(e){return setCurrentPanel(_objectSpread(_objectSpread({},currentPanel),{},{title:e.target.value}));},name:\"title\",value:currentPanel.title,required:true})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Description\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"textarea\",{type:\"text\",placeholder:\"Description...\",value:currentPanel.description,onChange:function onChange(e){return setCurrentPanel(_objectSpread(_objectSpread({},currentPanel),{},{description:e.target.value}));},name:\"description\",required:true})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Indicator\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"select\",{className:\"formselect\",name:\"indicator\",value:currentIndicator.id,onChange:function onChange(e){return getIndElement(e.target.value);},required:true,children:indicators.map(function(item){return/*#__PURE__*/_jsx(\"option\",{value:item.id,children:item.title});})})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Visualization\"}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"select\",{className:\"formselect\",name:\"chart\",onChange:function onChange(e){return getVizElement(e.target.value);},value:currentVisualization.id,required:true,children:visualizations.map(function(item){return/*#__PURE__*/_jsx(\"option\",{value:item.id,children:item.title});})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"chart_box\",children:/*#__PURE__*/_jsx(\"img\",{alt:\"Chart\",src:decodeChart(currentVisualization)})})})]})]}),/*#__PURE__*/_jsx(\"tr\",{})]})})}),/*#__PURE__*/_jsxs(Modal.Footer,{children:[/*#__PURE__*/_jsx(Button,{type:\"button\",size:\"sm\",variant:\"secondary\",onClick:props.onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",size:\"sm\",variant:\"secondary\",onClick:props.onSave,children:\"Save\"})]})]})})});};export default Actions;","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/panels_lib/panel_actions.js"],"names":["React","useContext","useState","Modal","Button","PanelContext","Draggable","chartContext","createContext","Actions","props","currentPanel","setCurrentPanel","currentIndicator","setCurrentIndicator","currentVisualization","setCurrentVisualization","indicators","visualizations","getIndElement","i","map","item","id","getVizElement","decodeChart","elt","blob","chart","data","img","Buffer","from","toString","undefined","show","title","e","target","value","description","onClose","onSave"],"mappings":"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","sourcesContent":["import \"../library-view.css\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { PanelContext } from \"../panels\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nexport const chartContext = React.createContext();\r\n\r\nconst Actions = (props) => {\r\n  const [\r\n    currentPanel,\r\n    setCurrentPanel,\r\n    currentIndicator,\r\n    setCurrentIndicator,\r\n    currentVisualization,\r\n    setCurrentVisualization,\r\n    indicators,\r\n    visualizations,\r\n  ] = useContext(PanelContext);\r\n\r\n\r\n\r\n  const getIndElement=(i)=>{\r\n    indicators.map((item)=>{\r\n        if(item.id == i) setCurrentIndicator(item)\r\n    })\r\n  }\r\n  const getVizElement=(i)=>{\r\n    visualizations.map((item)=>{\r\n        if(item.id == i) setCurrentVisualization(item)\r\n    })\r\n  }\r\n\r\n  \r\n  const decodeChart = (elt) => {\r\n    if (!elt) return;\r\n    let blob=elt.chart\r\n    if (typeof blob === \"string\") return blob;\r\n    const { data } = blob;\r\n    const img = new Buffer.from(data).toString(\"ascii\");\r\n\r\n    return img;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentPanel === undefined ? (\r\n        \" \"\r\n      ) : (\r\n        <Draggable>\r\n          <Modal\r\n            show={props.show}\r\n            backdrop=\"static\"\r\n            keyboard={true}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            dialogClassName=\"modal-style\"\r\n            scrollable\r\n            centered\r\n          >\r\n            <Modal.Header>\r\n              <Modal.Title>{currentPanel.title}</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <table className=\"table table-dark\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Name</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Panel Title\"\r\n                        onChange={(e) =>\r\n                          setCurrentPanel({\r\n                            ...currentPanel,\r\n                            title: e.target.value,\r\n                          })\r\n                        }\r\n                        name=\"title\"\r\n                        value={currentPanel.title}\r\n                        required\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Description</td>\r\n                    <td>\r\n                      <textarea\r\n                        type=\"text\"\r\n                        placeholder=\"Description...\"\r\n                        value={currentPanel.description}\r\n                        onChange={(e) =>\r\n                          setCurrentPanel({\r\n                            ...currentPanel,\r\n                            description: e.target.value,\r\n                          })\r\n                        }\r\n                        name=\"description\"\r\n                        required\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Indicator</td>\r\n                    <td>\r\n                      <select className=\"formselect\" name=\"indicator\" value={currentIndicator.id}\r\n                      onChange={(e) => getIndElement(e.target.value)} required>\r\n                        {indicators.map((item) => {\r\n                          return <option value={item.id}>{item.title}</option>;\r\n                        })}\r\n                      </select>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Visualization</td>\r\n                    <td>\r\n                      <select\r\n                        className=\"formselect\"\r\n                        name=\"chart\"\r\n                        onChange={(e) => getVizElement(e.target.value)}\r\n                        value={currentVisualization.id}\r\n                        required\r\n                      >\r\n                        {visualizations.map((item) => {\r\n                          return <option value={item.id}>{item.title}</option>;\r\n                        })}\r\n                      </select>\r\n                      <td>\r\n                        <div className=\"chart_box\">\r\n                          <img alt=\"Chart\" src={decodeChart(currentVisualization)} />\r\n                        </div>\r\n                      </td>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                  \r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                type=\"button\"\r\n                size=\"sm\"\r\n                variant=\"secondary\"\r\n                onClick={props.onClose}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                size=\"sm\"\r\n                variant=\"secondary\"\r\n                onClick={props.onSave}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </Draggable>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Actions;\r\n"]},"metadata":{},"sourceType":"module"}