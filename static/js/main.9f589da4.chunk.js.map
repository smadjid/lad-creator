{"version":3,"sources":["components/card.js","components/specification/specification-wizard.js","components/main-dash.js","logo.png","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","firstComponent","secondComponent","thirdComponent","finalComponent","SpecificationWizard","useState","key","label","isDone","component","steps","setSteps","activeStep","setActiveStep","map","step","i","type","onClick","onCloseWizard","index","findIndex","x","prevStep","disabled","value","length","alert","MainDash","isActive","specificationHandler","console","log","App","src","logo","alt","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f589da4.chunk.js","sourcesContent":["import './card.css'\r\nfunction Card(props){\r\n    const classes='card card_box '+props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n};\r\nexport default Card;","import React, { useState } from \"react\";\r\nimport \"./specification-wizard.css\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\n\r\nconst firstComponent = () => {\r\n  return <div>First Component</div>;\r\n};\r\nconst secondComponent = () => {\r\n  return <div>Second Component</div>;\r\n};\r\nconst thirdComponent = () => {\r\n  return <div>Third Component</div>;\r\n};\r\nconst finalComponent = () => {\r\n  return <div>Final Component</div>;\r\n};\r\n\r\nfunction SpecificationWizard(props) {\r\n  const [steps, setSteps] = useState([\r\n    {\r\n      key: \"firstStep\",\r\n      label: \"Context description\",\r\n      isDone: true,\r\n      component: firstComponent,\r\n    },\r\n    {\r\n      key: \"secondStep\",\r\n      label: \"The envisioned decision\",\r\n      isDone: false,\r\n      component: secondComponent,\r\n    },\r\n    {\r\n      key: \"thirdStep\",\r\n      label: \"Indicators & matrics\",\r\n      isDone: false,\r\n      component: thirdComponent,\r\n    },\r\n    {\r\n      key: \"forthStep\",\r\n      label: \"Visualization and layout\",\r\n      isDone: false,\r\n      component: finalComponent,\r\n    },\r\n    {\r\n      key: \"finalStep\",\r\n      label: \"Usage scenarios\",\r\n      isDone: false,\r\n      component: finalComponent,\r\n    },\r\n  ]);\r\n\r\n  const [activeStep, setActiveStep] = useState(steps[0]);\r\n\r\n  const handleNext = () => {\r\n    if (steps[steps.length - 1].key === activeStep.key) {\r\n      alert(\"You have completed the generation process...\");\r\n      return;\r\n    }\r\n    const index = steps.findIndex((x) => x.key === activeStep.key);\r\n    setSteps((prevStep) =>\r\n      prevStep.map((x) => {\r\n        if (x.key === activeStep.key) x.isDone = true;\r\n        return x;\r\n      })\r\n    );\r\n    setActiveStep(steps[index + 1]);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    const index = steps.findIndex((x) => x.key === activeStep.key);\r\n    if (index === 0) return;\r\n\r\n    setSteps((prevStep) =>\r\n      prevStep.map((x) => {\r\n        if (x.key === activeStep.key) x.isDone = false;\r\n        return x;\r\n      })\r\n    );\r\n    setActiveStep(steps[index - 1]);\r\n  };\r\n\r\n  const handlClose = () => {\r\n    //alert(\"The steps of the processed are saved\");\r\n    props.onCloseWizard();\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div className=\"SpecificationWizard\">\r\n      <div className=\"box\">\r\n        <div className=\"steps\">\r\n          <ul className=\"nav\">\r\n            {steps.map((step, i) => {\r\n              return (\r\n                <li\r\n                  key={i}\r\n                  className={`${activeStep.key === step.key ? \"active\" : \"\"} ${\r\n                    step.isDone ? \"done\" : \"\"\r\n                  }`}\r\n                >\r\n                  <div>\r\n                    {i + 1}. <span>{step.label}</span>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <div className=\"step-component\">{activeStep.component()}</div>\r\n\r\n        <div className=\"btn-component\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-light\"\r\n            onClick={handlClose}\r\n          >\r\n            <Icon.XCircle /> &nbsp;&nbsp;Close wizard\r\n          </button>\r\n\r\n          <div className=\"btn-component\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-light\"\r\n              onClick={handleBack}\r\n              disabled={steps[0].key === activeStep.key}\r\n            >\r\n              <Icon.SkipBackwardCircle /> &nbsp;&nbsp;Back\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-light\"\r\n              value={\r\n                steps[steps.length - 1].key !== activeStep.key\r\n                  ? \"Next\"\r\n                  : \"Submit\"\r\n              }\r\n              onClick={handleNext}\r\n            >\r\n              &nbsp;&nbsp;\r\n              {steps[steps.length - 1].key !== activeStep.key\r\n                ? \"Next\"\r\n                : \"Submit\"}{\" \"}\r\n              <Icon.SkipForwardCircle />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpecificationWizard;\r\n","import React, { useState } from 'react';\r\nimport Card from \"./card\";\r\nimport * as Icon from \"react-bootstrap-icons\";\r\nimport styles from \"./main-dash.module.css\";\r\n\r\nimport SpecificationWizard from \"./specification/specification-wizard\";\r\n\r\n\r\n\r\nfunction MainDash(props) {\r\n  const firstComponent = () => {\r\n\r\n    \r\n    return <SpecificationWizard onCloseWizard={()=>{\r\n      setActiveStep(steps[0])\r\n    }}/>;\r\n  }\r\n  \r\n  const mainCard = () => {\r\n    return <Card >\r\n    <button type=\"button\" className=\"btn btn-outline-light btn-lg\" onClick={specificationHandler}>\r\n      <Icon.ShieldPlus />  &nbsp;&nbsp;|&nbsp;&nbsp; Craft a new LAD Specification\r\n    </button>\r\n    <button type=\"button\" className=\"btn btn-outline-light btn-lg\">\r\n      <Icon.LayoutWtf />  &nbsp;&nbsp;|&nbsp;&nbsp; Open and edit an existing LAD specification\r\n    </button>\r\n    <button type=\"button\" className=\"btn btn-outline-light btn-lg\">\r\n      <Icon.Collection />  &nbsp;&nbsp;|&nbsp;&nbsp; Explorer and manage the current Library\r\n    </button>\r\n    <button type=\"button\" className=\"btn btn-outline-light btn-lg\">\r\n      <Icon.GearWideConnected />  &nbsp;&nbsp;|&nbsp;&nbsp;\r\n      Specify and manage the creation rules\r\n    </button>\r\n  </Card>\r\n  }\r\n\r\n  const [steps, setSteps] = useState([\r\n    { key: 'no', label: ' ', isActive: true, component: mainCard },\r\n    { key: 'specification', label: 'LAD Specification', isActive: false, component: firstComponent },\r\n  ]);\r\n  \r\n  const [activeStep, setActiveStep] = useState(steps[0]);\r\n  const specificationHandler=()=>{\r\n    setActiveStep(steps[1]);\r\n    console.log(activeStep);\r\n    return ;\r\n  }\r\n  return (\r\n    <div>\r\n    \r\n    <div className=\"step-component\">\r\n          {activeStep.component()}\r\n     </div>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainDash;\r\n","export default __webpack_public_path__ + \"static/media/logo.643c5d7a.png\";","import MainDash from \"./components/main-dash\";\nimport logo from \"./logo.png\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"main-head\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <b> </b>\n        </div>\n        <hr />\n      </header>\n\n      <main className=\"App-main\">\n        <MainDash />\n        <p>\n          The <em>LAD Creator</em> tool is a part of the{\" \"}\n          <a href=\"http://padlad.github.io/\">PadLAD project</a>\n        </p>\n      </main>\n      <footer>(c)Madjid SADALLAH</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}