{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\library\\\\visualizations_lib\\\\edit_visualization.js\",\n    _s = $RefreshSig$();\n\nimport \"../library-view.css\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport ChartUpload from \"../chart-upload\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Edit(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    data[\"id\"] = props.id;\n    data = chart === undefined ? data.chart = chart : data;\n    console.log(data.chart);\n    updateVisualization(data);\n  };\n\n  const updateVisualization = data => {\n    axios.put(\"http://localhost:3001/visualizations\", data).then(res => {\n      props.setVisualizations(props.visualizations.map(item => {\n        return item.id === props.id ? {\n          id: item.id,\n          title: item.title,\n          description: item.description,\n          class: item.class,\n          chart: item.chart\n        } : item;\n      }));\n    });\n  };\n\n  const [chart, setChart] = React.useState();\n\n  const handleChartChange = v => {\n    setChart(v);\n    alert('updated');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"add-visualization\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      placeholder: \"Description...\",\n      name: \"description\",\n      ...register(\"description\", {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      class: \"formselect\",\n      placeholder: \"Rating\",\n      name: \"class\",\n      ...register(\"class\", {\n        required: true\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Distribution\",\n        children: \"Distribution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Correlation\",\n        children: \"Correlation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Ranking\",\n        children: \"Ranking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Part of a Whole\",\n        children: \"Part of a Whole\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Evolution\",\n        children: \"Evolution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Map\",\n        children: \"Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Flow\",\n        children: \"Flow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChartUpload, {\n      onChartChange: handleChartChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"btn btn-outline-success\",\n      value: \"Update\",\n      type: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Edit, \"ohaWfSj3cRjccIgOj1SJNhepwvI=\", false, function () {\n  return [useForm];\n});\n\n_c = Edit;\n\nvar _c;\n\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/visualizations_lib/edit_visualization.js"],"names":["React","useState","useForm","axios","ChartUpload","Edit","props","register","handleSubmit","onSubmit","data","id","chart","undefined","console","log","updateVisualization","put","then","res","setVisualizations","visualizations","map","item","title","description","class","setChart","handleChartChange","v","alert","required"],"mappings":"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","sourcesContent":["import \"../library-view.css\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport ChartUpload from \"../chart-upload\";\n\nexport default function Edit(props) {\n  const { register, handleSubmit } = useForm();\n  const onSubmit = (data) => {\n    data[\"id\"] = props.id;\n    data = (chart===undefined)? data.chart=chart:data;\n    console.log(data.chart);\n    updateVisualization(data);\n  };\n\n  const updateVisualization = (data) => {\n    axios.put(\"http://localhost:3001/visualizations\", data).then((res) => {\n      props.setVisualizations(\n        props.visualizations.map((item) => {\n          return item.id === props.id\n            ? {\n                id: item.id,\n                title: item.title,\n                description: item.description,\n                class: item.class,\n                chart: item.chart,\n              }\n            : item;\n        })\n      );\n    });\n  };\n\n  const [chart, setChart] = React.useState();\n\n  const handleChartChange = (v) => {\n    setChart(v);alert('updated')\n  };\n\n  return (\n    <form className=\"add-visualization\" onSubmit={handleSubmit(onSubmit)}>\n      <textarea\n        type=\"text\"\n        placeholder=\"Description...\"\n        name=\"description\"\n        {...register(\"description\", { required: true })}\n      />\n\n      <select\n        class=\"formselect\"\n        placeholder=\"Rating\"\n        name=\"class\"\n        {...register(\"class\", { required: true })}\n      >\n        <option value=\"Distribution\">Distribution</option>\n        <option value=\"Correlation\">Correlation</option>\n        <option value=\"Ranking\">Ranking</option>\n        <option value=\"Part of a Whole\">Part of a Whole</option>\n        <option value=\"Evolution\">Evolution</option>\n        <option value=\"Map\">Map</option>\n        <option value=\"Flow\">Flow</option>\n      </select>\n      <b>Chart</b>\n      <ChartUpload onChartChange={handleChartChange} />\n      <input className=\"btn btn-outline-success\" value=\"Update\" type=\"submit\" />\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}