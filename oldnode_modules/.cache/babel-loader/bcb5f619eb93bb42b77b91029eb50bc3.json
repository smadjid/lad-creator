{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\library\\\\visualizations_lib\\\\visualization_actions.js\",\n    _s = $RefreshSig$();\n\nimport \"../library-view.css\";\nimport React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport ChartUpload from \"../chart-upload\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Actions(props) {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    data[\"id\"] = props.id;\n    data.chart = chart;\n    updateVisualization(data);\n  };\n\n  const updateVisualization = data => {\n    axios.put(\"http://localhost:3001/visualizations\", data).then(res => {\n      props.setVisualizations(props.visualizations.map(item => {\n        return item.id === props.id ? {\n          id: item.id,\n          title: item.title,\n          description: item.description,\n          class: item.class,\n          chart: item.chart\n        } : item;\n      }));\n    });\n    props.updateDisplay();\n  };\n\n  const [chart, setChart] = React.useState(null);\n\n  const handleChartChange = v => {\n    setChart(v);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.show,\n    backdrop: \"static\",\n    keyboard: true,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    dialogClassName: \"modal-style\",\n    scrollable: true,\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Configure the frame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: props.element != null & /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"add-visualization\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          placeholder: \"Description...\",\n          name: \"description\",\n          value: props.element.description,\n          ...register(\"description\", {\n            required: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"formselect\",\n          placeholder: \"Rating\",\n          name: \"class\",\n          value: props.element.class,\n          ...register(\"class\", {\n            required: true\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Distribution\",\n            children: \"Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Correlation\",\n            children: \"Correlation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Ranking\",\n            children: \"Ranking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Part of a Whole\",\n            children: \"Part of a Whole\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Evolution\",\n            children: \"Evolution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Map\",\n            children: \"Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Flow\",\n            children: \"Flow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Chart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ChartUpload, {\n          onChartChange: handleChartChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-outline-success\",\n          value: \"Update\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"sm\",\n        variant: \"secondary\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        variant: \"secondary\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Actions, \"+/ph70yc+YfKp5U0+b35VMHOY+A=\", false, function () {\n  return [useForm];\n});\n\n_c = Actions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actions\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/visualizations_lib/visualization_actions.js"],"names":["React","useState","useForm","axios","ChartUpload","Modal","Button","Actions","props","register","handleSubmit","onSubmit","data","id","chart","updateVisualization","put","then","res","setVisualizations","visualizations","map","item","title","description","class","updateDisplay","setChart","handleChartChange","v","show","element","required"],"mappings":"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","sourcesContent":["import \"../library-view.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport ChartUpload from \"../chart-upload\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport default function Actions(props) {\r\n  const { register, handleSubmit } = useForm();\r\n  \r\n  const onSubmit = (data) => {\r\n    data[\"id\"] = props.id;\r\n    data.chart = chart;\r\n    \r\n    updateVisualization(data);\r\n  };\r\n\r\n  const updateVisualization = (data) => {\r\n    axios.put(\"http://localhost:3001/visualizations\", data).then((res) => {\r\n      props.setVisualizations(\r\n        props.visualizations.map((item) => {\r\n          return item.id === props.id\r\n            ? {\r\n                id: item.id,\r\n                title: item.title,\r\n                description: item.description,\r\n                class: item.class,\r\n                chart: item.chart,\r\n              }\r\n            : item;\r\n        })\r\n      );\r\n    });\r\n    props.updateDisplay();\r\n  };\r\n\r\n  const [chart, setChart] = React.useState(null);\r\n\r\n  const handleChartChange = (v) => {\r\n    setChart(v);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n   show={props.show}\r\n    backdrop=\"static\"\r\n    keyboard={true}\r\n    size=\"lg\"\r\n    aria-labelledby=\"contained-modal-title-vcenter\"\r\n    dialogClassName=\"modal-style\"\r\n    scrollable\r\n    centered\r\n  >\r\n    <Modal.Header>\r\n      <Modal.Title>Configure the frame</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n    {props.element!= null &\r\n    <form className=\"add-visualization\" onSubmit={handleSubmit(onSubmit)}>\r\n      <textarea\r\n        type=\"text\"\r\n        placeholder=\"Description...\"\r\n        name=\"description\"\r\n        value={props.element.description}\r\n        {...register(\"description\", { required: true })}\r\n      />\r\n\r\n      <select\r\n        className=\"formselect\"\r\n        placeholder=\"Rating\"\r\n        name=\"class\"\r\n        value={props.element.class}\r\n        {...register(\"class\", { required: true })}\r\n      >\r\n        <option value=\"Distribution\">Distribution</option>\r\n        <option value=\"Correlation\">Correlation</option>\r\n        <option value=\"Ranking\">Ranking</option>\r\n        <option value=\"Part of a Whole\">Part of a Whole</option>\r\n        <option value=\"Evolution\">Evolution</option>\r\n        <option value=\"Map\">Map</option>\r\n        <option value=\"Flow\">Flow</option>\r\n      </select>\r\n      <b>Chart</b>\r\n      <ChartUpload onChartChange={handleChartChange} />\r\n      <input className=\"btn btn-outline-success\" value=\"Update\" type=\"submit\" />\r\n    </form>\r\n}\r\n    </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button  size=\"sm\" variant=\"secondary\">\r\n                  Close\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  size=\"sm\"\r\n                  variant=\"secondary\"\r\n               \r\n                >\r\n                  Save Changes\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}