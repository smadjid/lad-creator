{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport \"../library-view.css\";\nimport React, { useState, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport ChartUpload from \"../chart-upload\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button } from \"react-bootstrap\";\nimport { VizContext } from \"../visualizations\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Actions = props => {\n  _s();\n\n  const [element, setElement] = useContext(VizContext);\n\n  const assignElement = e => {\n    console.log(e);\n    setElement(e);\n    console.log(element);\n  };\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    data[\"id\"] = props.id;\n    data.chart = chart;\n    updateVisualization(data);\n  };\n\n  const updateVisualization = data => {\n    axios.put(\"http://localhost:3001/visualizations\", data).then(res => {\n      props.setVisualizations(props.visualizations.map(item => {\n        return item.id === props.id ? {\n          id: item.id,\n          title: item.title,\n          description: item.description,\n          class: item.class,\n          chart: item.chart\n        } : item;\n      }));\n    });\n    props.updateDisplay();\n  };\n\n  const [chart, setChart] = React.useState(null);\n\n  const handleChartChange = v => {\n    setChart(v);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: element === undefined ? \"undefined\" : \"defined\"\n  }, void 0, false);\n};\n\n_s(Actions, \"PiDukhrgj6+sffn5OfVAEyGliyE=\", false, function () {\n  return [useForm];\n});\n\n_c = Actions;\nexport default Actions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actions\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/visualizations_lib/visualization_actions.js"],"names":["React","useState","useContext","useForm","axios","ChartUpload","Modal","Button","VizContext","Actions","props","element","setElement","assignElement","e","console","log","register","handleSubmit","onSubmit","data","id","chart","updateVisualization","put","then","res","setVisualizations","visualizations","map","item","title","description","class","updateDisplay","setChart","handleChartChange","v","undefined"],"mappings":";;AAAA,OAAO,qBAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,UAAU,CAACM,UAAD,CAAxC;;AAEA,QAAMK,aAAa,GAAIC,CAAD,IAAK;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAF,IAAAA,UAAU,CAACE,CAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACH,GAJD;;AAOF,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6Bf,OAAO,EAA1C;;AAEA,QAAMgB,QAAQ,GAAIC,IAAD,IAAU;AACzBA,IAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaV,KAAK,CAACW,EAAnB;AACAD,IAAAA,IAAI,CAACE,KAAL,GAAaA,KAAb;AAEAC,IAAAA,mBAAmB,CAACH,IAAD,CAAnB;AACD,GALD;;AAOA,QAAMG,mBAAmB,GAAIH,IAAD,IAAU;AACpChB,IAAAA,KAAK,CAACoB,GAAN,CAAU,sCAAV,EAAkDJ,IAAlD,EAAwDK,IAAxD,CAA8DC,GAAD,IAAS;AACpEhB,MAAAA,KAAK,CAACiB,iBAAN,CACEjB,KAAK,CAACkB,cAAN,CAAqBC,GAArB,CAA0BC,IAAD,IAAU;AACjC,eAAOA,IAAI,CAACT,EAAL,KAAYX,KAAK,CAACW,EAAlB,GACH;AACEA,UAAAA,EAAE,EAAES,IAAI,CAACT,EADX;AAEEU,UAAAA,KAAK,EAAED,IAAI,CAACC,KAFd;AAGEC,UAAAA,WAAW,EAAEF,IAAI,CAACE,WAHpB;AAIEC,UAAAA,KAAK,EAAEH,IAAI,CAACG,KAJd;AAKEX,UAAAA,KAAK,EAAEQ,IAAI,CAACR;AALd,SADG,GAQHQ,IARJ;AASD,OAVD,CADF;AAaD,KAdD;AAeApB,IAAAA,KAAK,CAACwB,aAAN;AACD,GAjBD;;AAmBA,QAAM,CAACZ,KAAD,EAAQa,QAAR,IAAoBnC,KAAK,CAACC,QAAN,CAAe,IAAf,CAA1B;;AAEA,QAAMmC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BF,IAAAA,QAAQ,CAACE,CAAD,CAAR;AACD,GAFD;;AAMA,sBACC;AAAA,cACC1B,OAAO,KAAG2B,SAAV,GAAqB,WAArB,GAAkC;AADnC,mBADD;AAMD,CApDD;;GAAM7B,O;UAU+BN,O;;;KAV/BM,O;AAqDN,eAAeA,OAAf","sourcesContent":["import \"../library-view.css\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport ChartUpload from \"../chart-upload\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { VizContext } from \"../visualizations\";\r\n\r\n\r\nconst Actions = (props) => {\r\n    const [element, setElement] = useContext(VizContext);\r\n    \r\n    const assignElement = (e)=>{\r\n        console.log(e);\r\n        setElement(e);\r\n        console.log(element);\r\n    }\r\n\r\n    \r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const onSubmit = (data) => {\r\n    data[\"id\"] = props.id;\r\n    data.chart = chart;\r\n\r\n    updateVisualization(data);\r\n  };\r\n\r\n  const updateVisualization = (data) => {\r\n    axios.put(\"http://localhost:3001/visualizations\", data).then((res) => {\r\n      props.setVisualizations(\r\n        props.visualizations.map((item) => {\r\n          return item.id === props.id\r\n            ? {\r\n                id: item.id,\r\n                title: item.title,\r\n                description: item.description,\r\n                class: item.class,\r\n                chart: item.chart,\r\n              }\r\n            : item;\r\n        })\r\n      );\r\n    });\r\n    props.updateDisplay();\r\n  };\r\n\r\n  const [chart, setChart] = React.useState(null);\r\n\r\n  const handleChartChange = (v) => {\r\n    setChart(v);\r\n  };\r\n\r\n  \r\n \r\n  return (\r\n   <>\r\n   {element===undefined? \"undefined\": \"defined\"}\r\n   \r\n    </>)\r\n  \r\n};\r\nexport default Actions;"]},"metadata":{},"sourceType":"module"}