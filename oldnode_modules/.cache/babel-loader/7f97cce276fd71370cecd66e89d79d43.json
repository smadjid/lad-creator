{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\library\\\\panels.js\",\n    _s = $RefreshSig$();\n\nimport \"./library-view.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Actions from \"./panels_lib/panel_actions\";\nimport axios from \"axios\";\nimport { AddBoxRounded, EditRounded, HighlightOffRounded } from \"@material-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PanelContext = /*#__PURE__*/React.createContext();\n\nfunction Panels() {\n  _s();\n\n  const [panels, setPanels] = useState([]);\n  const [visualizations, setVisualizations] = useState([]);\n  const [indicators, setIndicators] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [currentPanel, setCurrentPanel] = useState();\n  const [currentIndicator, setCurrentIndicator] = useState();\n  const [currentVisualization, setCurrentVisualization] = useState();\n  const panelContext = [currentPanel, setCurrentPanel, currentIndicator, setCurrentIndicator, currentVisualization, setCurrentVisualization, indicators, visualizations];\n  const [creationMode, setCreationMode] = useState(true);\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleModalSave = () => {\n    setCurrentPanel({ ...currentPanel,\n      visualization_id: currentVisualization.id\n    });\n    let element = currentPanel;\n    element.visualization_id = currentVisualization.id;\n    element.indicator_id = currentVisualization.id;\n    if (creationMode) axios.post(\"http://localhost:3001/panels\", element).then(() => {\n      setPanels([...panels, {\n        data: element,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }]);\n      updateDisplay();\n    });else axios.put(\"http://localhost:3001/panels\", element).then(res => {\n      setPanels(panels.map(item => {\n        return item.id === element.id ? {\n          id: item.id,\n          title: item.title,\n          description: item.description,\n          visualization_id: item.visualization_id,\n          indicator_id: item.indicator_id\n        } : item;\n      }));\n      updateDisplay();\n    });\n    setShowModal(false);\n    updateDisplay();\n  };\n\n  const deletePanel = id => {\n    window.confirm(\"Are you sure you want to delete this type of panel?\") ? axios.delete(`http://localhost:3001/panels/${id}`).then(res => {\n      setPanels(panels.filter(item => {\n        return item.id !== id;\n      }));\n    }) : id = id;\n    updateDisplay();\n  };\n\n  const getPanels = () => {\n    axios.get(\"http://localhost:3001/panels\").then(res => {\n      setPanels(res.data);\n    });\n  };\n\n  const getVisualizations = () => {\n    axios.get(\"http://localhost:3001/visualizations\").then(res => {\n      setVisualizations(res.data);\n    });\n  };\n\n  const getIndicators = () => {\n    axios.get(\"http://localhost:3001/indicators\").then(res => {\n      setIndicators(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getPanels();\n    getVisualizations();\n    getIndicators();\n  }, []);\n\n  const updateDisplay = () => {\n    getPanels();\n    getVisualizations();\n    getIndicators();\n  };\n\n  const decodeChart = blob => {\n    if (!blob) return;\n    if (typeof blob === \"string\") return blob;\n    const {\n      data\n    } = blob;\n    const img = new Buffer.from(data).toString(\"ascii\");\n    return img;\n  };\n\n  const fetchVizElement = id => {\n    if (typeof id === 'undefined') return;else {\n      let elt = visualizations.find(x => x.id === id);\n      if (elt) return elt.chart;\n    }\n  };\n\n  const CreateNewPanel = () => {\n    const item = {\n      title: \"New\",\n      description: \"Description\",\n      visualization_id: null,\n      indicator_id: null\n    };\n    setCurrentPanel(item);\n    setCreationMode(true);\n    setShowModal(true);\n    return;\n  };\n\n  const EditPanel = item => {\n    setCurrentPanel(item);\n    setCreationMode(false);\n    setShowModal(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(PanelContext.Provider, {\n    value: panelContext,\n    children: [/*#__PURE__*/_jsxDEV(Actions, {\n      title: \"un titre\",\n      show: showModal,\n      mode: \"Creation\",\n      panels: panels,\n      setPanels: setPanels,\n      updateDisplay: updateDisplay,\n      onClose: handleModalClose,\n      onSave: handleModalSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: CreateNewPanel,\n        children: [/*#__PURE__*/_jsxDEV(AddBoxRounded, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), \" \\xA0 New panel type\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-hover table-dark table-striped text-md-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Representation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: panels.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.class\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"chart_box\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"Chart\",\n                  src: decodeChart(fetchVizElement(item.visualization_id))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-outline-primary\",\n                onClick: () => EditPanel(item),\n                children: /*#__PURE__*/_jsxDEV(EditRounded, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-outline-danger\",\n                onClick: () => deletePanel(item.id),\n                children: /*#__PURE__*/_jsxDEV(HighlightOffRounded, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Panels, \"Ja14OfI/4q6/AevnZoMmIcckAUY=\");\n\n_c = Panels;\nexport default Panels;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panels\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/panels.js"],"names":["React","useState","useEffect","Actions","axios","AddBoxRounded","EditRounded","HighlightOffRounded","PanelContext","createContext","Panels","panels","setPanels","visualizations","setVisualizations","indicators","setIndicators","showModal","setShowModal","currentPanel","setCurrentPanel","currentIndicator","setCurrentIndicator","currentVisualization","setCurrentVisualization","panelContext","creationMode","setCreationMode","handleModalClose","handleModalSave","visualization_id","id","element","indicator_id","post","then","data","headers","updateDisplay","put","res","map","item","title","description","deletePanel","window","confirm","delete","filter","getPanels","get","getVisualizations","getIndicators","decodeChart","blob","img","Buffer","from","toString","fetchVizElement","elt","find","x","chart","CreateNewPanel","EditPanel","class"],"mappings":"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","sourcesContent":["import \"./library-view.css\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Actions from \"./panels_lib/panel_actions\";\r\nimport axios from \"axios\";\r\nimport {\r\n  AddBoxRounded,\r\n  EditRounded,\r\n  HighlightOffRounded,\r\n} from \"@material-ui/icons\";\r\n\r\nexport const PanelContext = React.createContext();\r\n\r\nfunction Panels() {\r\n  const [panels, setPanels] = useState([]);\r\n  const [visualizations, setVisualizations] = useState([]);\r\n  const [indicators, setIndicators] = useState([]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  \r\n  const [currentPanel, setCurrentPanel] = useState();\r\n  const [currentIndicator, setCurrentIndicator] = useState();\r\n  const [currentVisualization, setCurrentVisualization] = useState();\r\n  \r\n  const panelContext = [\r\n    currentPanel,\r\n    setCurrentPanel,\r\n    currentIndicator,\r\n    setCurrentIndicator,\r\n    currentVisualization,\r\n    setCurrentVisualization,\r\n    indicators,\r\n    visualizations\r\n  ];\r\n\r\n  const [creationMode, setCreationMode] = useState(true);\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  const handleModalSave = () => {\r\n\r\n    setCurrentPanel({...currentPanel,visualization_id:currentVisualization.id});\r\n\r\n    let element = currentPanel;\r\n    element.visualization_id=currentVisualization.id;\r\n    element.indicator_id=currentVisualization.id;\r\n     \r\n    if (creationMode)\r\n      axios.post(\"http://localhost:3001/panels\", element).then(() => {\r\n        setPanels([\r\n          ...panels,\r\n          {\r\n            data: element,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          },\r\n        ]);\r\n        updateDisplay();\r\n      });\r\n    else\r\n      axios.put(\"http://localhost:3001/panels\", element).then((res) => {\r\n        setPanels(\r\n          panels.map((item) => {\r\n            return item.id === element.id\r\n              ? {\r\n                  id: item.id,\r\n                  title: item.title,\r\n                  description: item.description,\r\n                  visualization_id: item.visualization_id,\r\n                  indicator_id: item.indicator_id,\r\n                }\r\n              : item;\r\n          })\r\n        );\r\n        updateDisplay();\r\n      });\r\n\r\n    setShowModal(false);\r\n    updateDisplay();\r\n  };\r\n\r\n  const deletePanel = (id) => {\r\n    window.confirm(\"Are you sure you want to delete this type of panel?\")\r\n      ? axios.delete(`http://localhost:3001/panels/${id}`).then((res) => {\r\n          setPanels(\r\n            panels.filter((item) => {\r\n              return item.id !== id;\r\n            })\r\n          );\r\n        })\r\n      : (id = id);\r\n    updateDisplay();\r\n  };\r\n\r\n  const getPanels = () => {\r\n    axios.get(\"http://localhost:3001/panels\").then((res) => {\r\n      setPanels(res.data);\r\n    });\r\n  };\r\n\r\n  const getVisualizations = () => {\r\n    axios.get(\"http://localhost:3001/visualizations\").then((res) => {\r\n      setVisualizations(res.data);\r\n    });\r\n  };\r\n  const getIndicators = () => {\r\n    axios.get(\"http://localhost:3001/indicators\").then((res) => {\r\n      setIndicators(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPanels();\r\n    getVisualizations();\r\n    getIndicators();\r\n  }, []);\r\n\r\n  const updateDisplay = () => {\r\n    getPanels();\r\n    getVisualizations();\r\n    getIndicators();\r\n  };\r\n\r\n  const decodeChart = (blob) => {\r\n    if (!blob) return;\r\n    if (typeof blob === \"string\") return blob;\r\n    const { data } = blob;\r\n    const img = new Buffer.from(data).toString(\"ascii\");\r\n\r\n    return img;\r\n  };\r\n\r\n  const fetchVizElement = (id) =>{\r\n      \r\n      if(typeof id === 'undefined') return;\r\n      else{\r\n          let elt = visualizations.find(x  => x.id === id) \r\n          if(elt) return elt.chart;\r\n      }\r\n  }\r\n\r\n\r\n  const CreateNewPanel = () => {\r\n    const item = {\r\n      title: \"New\",\r\n      description: \"Description\",\r\n      visualization_id: null,\r\n      indicator_id: null,\r\n    };\r\n\r\n    setCurrentPanel(item);\r\n    setCreationMode(true);\r\n    setShowModal(true);\r\n\r\n    return;\r\n  };\r\n  const EditPanel = (item) => {\r\n    setCurrentPanel(item);\r\n    setCreationMode(false);\r\n    setShowModal(true);\r\n  };\r\n  return (\r\n    <PanelContext.Provider value={panelContext}>\r\n      <Actions\r\n        title=\"un titre\"\r\n        show={showModal}\r\n        mode=\"Creation\"\r\n        panels={panels}\r\n        setPanels={setPanels}\r\n        updateDisplay={updateDisplay}\r\n        onClose={handleModalClose}\r\n        onSave={handleModalSave}\r\n      />\r\n\r\n      <div>\r\n        <button className=\"btn btn-success\" onClick={CreateNewPanel}>\r\n          <AddBoxRounded /> &nbsp; New panel type\r\n        </button>\r\n      </div>\r\n      <table className=\"table table-bordered table-hover table-dark table-striped text-md-start\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Title</th>\r\n            <th scope=\"col\">Indicator</th>\r\n            <th scope=\"col\">Representation</th>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {panels.map((item) => {\r\n            return (\r\n              <tr key={item.id}>\r\n                <th scope=\"row\">{item.id}</th>\r\n                <td>{item.title}</td>\r\n                <td>{item.class}</td>\r\n                <td>\r\n                  <div className=\"chart_box\">\r\n                    <img alt=\"Chart\" src={decodeChart(fetchVizElement(item.visualization_id))} />\r\n                  </div>\r\n                </td>\r\n                <td>{item.description}</td>\r\n\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-primary\"\r\n                    onClick={() => EditPanel(item)}\r\n                  >\r\n                    <EditRounded />\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-danger\"\r\n                    onClick={() => deletePanel(item.id)}\r\n                  >\r\n                    <HighlightOffRounded />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </PanelContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Panels;\r\n"]},"metadata":{},"sourceType":"module"}