{"ast":null,"code":"import _objectSpread from\"C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{VizContext}from\"./visualizations\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChartUpload=function ChartUpload(props){var _useContext=useContext(VizContext),_useContext2=_slicedToArray(_useContext,2),element=_useContext2[0],setElement=_useContext2[1];var decodeChart=function decodeChart(blob){if(!blob)return;if(typeof blob==='string')return blob;var data=blob.data;var img=new Buffer.from(data).toString(\"ascii\");return img;};var onChangePicture=function onChangePicture(e){if(e.target.files[0]){var reader=new FileReader();reader.addEventListener(\"load\",function(){//props.onChartChange(reader.result);\nsetElement(_objectSpread(_objectSpread({},element),{},{chart:reader.result}));});reader.readAsDataURL(e.target.files[0]);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"formInstructionsDiv formElement\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"instructionsText\"}),/*#__PURE__*/_jsx(\"div\",{className:\"register_profile_image\",children:/*#__PURE__*/_jsx(\"input\",{id:\"chart\",type:\"file\",onChange:onChangePicture,accept:\"image/*\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"chart_box\",children:/*#__PURE__*/_jsx(\"img\",{className:\"chart_box-image\",src:decodeChart(element.chart)})})]});};export default ChartUpload;","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/chart-upload.js"],"names":["React","useState","useContext","VizContext","ChartUpload","props","element","setElement","decodeChart","blob","data","img","Buffer","from","toString","onChangePicture","e","target","files","reader","FileReader","addEventListener","chart","result","readAsDataURL"],"mappings":"mSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,UAA1B,KAA4C,OAA5C,CACA,OAASC,UAAT,KAA2B,kBAA3B,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,gBAA8BH,UAAU,CAACC,UAAD,CAAxC,4CAAOG,OAAP,iBAAgBC,UAAhB,iBAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAU,CAC5B,GAAI,CAACA,IAAL,CAAW,OACX,GAAG,MAAOA,CAAAA,IAAP,GAAgB,QAAnB,CAA6B,MAAOA,CAAAA,IAAP,CAC7B,GAAQC,CAAAA,IAAR,CAAiBD,IAAjB,CAAQC,IAAR,CACA,GAAMC,CAAAA,GAAG,CAAG,GAAIC,CAAAA,MAAM,CAACC,IAAX,CAAgBH,IAAhB,EAAsBI,QAAtB,CAA+B,OAA/B,CAAZ,CAEA,MAAOH,CAAAA,GAAP,CACD,CAPD,CASA,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,CAAD,CAAO,CAC7B,GAAIA,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAJ,CAAuB,CACrB,GAAMC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,EAAf,CACAD,MAAM,CAACE,gBAAP,CAAwB,MAAxB,CAAgC,UAAM,CAEpC;AACAd,UAAU,gCAAKD,OAAL,MAAcgB,KAAK,CAACH,MAAM,CAACI,MAA3B,GAAV,CAED,CALD,EAMAJ,MAAM,CAACK,aAAP,CAAqBR,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB,EAGD,CACF,CAbD,CAcA,mBACE,aAAK,SAAS,CAAC,iCAAf,wBACE,UAAG,SAAS,CAAC,kBAAb,EADF,cAEE,YAAK,SAAS,CAAC,wBAAf,uBACE,cACE,EAAE,CAAC,OADL,CAEE,IAAI,CAAC,MAFP,CAGE,QAAQ,CAAEH,eAHZ,CAIE,MAAM,CAAC,SAJT,EADF,EAFF,cAWE,YAAK,SAAS,CAAC,WAAf,uBACG,YAAK,SAAS,CAAC,iBAAf,CAAiC,GAAG,CAAEP,WAAW,CAACF,OAAO,CAACgB,KAAT,CAAjD,EADH,EAXF,GADF,CAiBD,CA5CD,CA8CA,cAAelB,CAAAA,WAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { VizContext } from \"./visualizations\";\r\n\r\nconst ChartUpload = (props) => {\r\n  const [element, setElement] = useContext(VizContext);\r\n\r\n  \r\n  const decodeChart = (blob) => {\r\n    if (!blob) return;\r\n    if(typeof blob === 'string') return blob;\r\n    const { data } = blob;\r\n    const img = new Buffer.from(data).toString(\"ascii\");\r\n    \r\n    return img;\r\n  };\r\n\r\n  const onChangePicture = (e) => {\r\n    if (e.target.files[0]) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener(\"load\", () => {\r\n        \r\n        //props.onChartChange(reader.result);\r\n        setElement({...element, chart:reader.result} );\r\n        \r\n      });\r\n      reader.readAsDataURL(e.target.files[0]);\r\n      \r\n      \r\n    }\r\n  };\r\n  return (\r\n    <div className=\"formInstructionsDiv formElement\">\r\n      <p className=\"instructionsText\" />\r\n      <div className=\"register_profile_image\">\r\n        <input\r\n          id=\"chart\"\r\n          type=\"file\"\r\n          onChange={onChangePicture}\r\n          accept=\"image/*\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"chart_box\">\r\n         <img className=\"chart_box-image\" src={decodeChart(element.chart)} /> \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartUpload;\r\n"]},"metadata":{},"sourceType":"module"}