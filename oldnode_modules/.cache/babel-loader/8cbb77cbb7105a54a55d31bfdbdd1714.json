{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madjid Sadallah\\\\Documents\\\\GitHub\\\\CoGenDash\\\\lad-creator\\\\src\\\\components\\\\library\\\\frames.js\",\n    _s = $RefreshSig$();\n\nimport \"./library-view.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Actions from \"./frames_lib/frame_actions\";\nimport axios from \"axios\";\nimport Collapsible from \"react-collapsible\";\nimport { AddBoxRounded, EditRounded, HighlightOff, HighlightOffRounded, Loupe, RemoveCircle } from \"@material-ui/icons\"; //import FrameItem from \"./panels_lib/frame_items\";\n\nimport { EyeFill } from \"react-bootstrap-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FrameContext = /*#__PURE__*/React.createContext();\n\nfunction Frames() {\n  _s();\n\n  const [frames, setFrames] = useState([]);\n  const [panels, setPanels] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [showItemModal, setShowItemModal] = useState(false);\n  const [currentFrame, setCurrentFrame] = useState();\n  const [currentPanel, setCurrentPanel] = useState();\n  const [pList, setpList] = useState();\n  const [visualizations, setVisualizations] = useState();\n  const [indicators, setIndicators] = useState();\n  const frameContext = [currentFrame, setCurrentFrame, currentPanel, setCurrentPanel, pList, setpList, panels, visualizations, indicators];\n  const [creationMode, setCreationMode] = useState(true);\n\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n\n  const handleItemModalClose = () => {\n    setShowItemModal(false);\n  };\n\n  const handleItemModalSave = () => {\n    let element = currentFrame;\n    let plist = {\n      frame_id: currentFrame.id,\n      panel_id: currentPanel.id\n    };\n    axios.post(\"http://localhost:3001/plist\", plist).then(() => {\n      updateDisplay();\n    });\n    setShowItemModal(false);\n    updateDisplay();\n  };\n\n  const handleModalSave = () => {\n    let element = currentFrame; //return;\n\n    if (creationMode) axios.post(\"http://localhost:3001/frames\", element).then(() => {\n      setFrames([...frames, {\n        data: element,\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }]);\n      updateDisplay();\n    });else axios.put(\"http://localhost:3001/frames\", element).then(res => {\n      setFrames(frames.map(item => {\n        return item.id === element.id ? {\n          id: item.id,\n          title: item.title,\n          description: item.description\n        } : item;\n      }));\n      updateDisplay();\n    });\n    setShowModal(false);\n    updateDisplay();\n  };\n\n  const deleteFrame = id => {\n    window.confirm(\"Are you sure you want to delete this type of frame?\") ? axios.delete(`http://localhost:3001/frames/${id}`).then(res => {\n      setFrames(frames.filter(item => {\n        return item.id !== id;\n      }));\n    }) : id = id;\n    updateDisplay();\n  };\n\n  const getFrames = () => {\n    axios.get(\"http://localhost:3001/frames\").then(res => {\n      setFrames(res.data);\n    });\n  };\n\n  const getFrameItems = item => {\n    if (!pList) return [];\n    if (!item) return [];\n    let elts = pList.filter(i => i.frame_id === item.id);\n    return elts;\n  };\n\n  const getPanByID = id => {\n    let elt = {\n      title: \" \",\n      description: \" \"\n    };\n    if (panels) elt = panels.find(x => x.id === id);\n    return elt;\n  };\n\n  const decodeChart = elt => {\n    if (!elt) return;\n    let blob = elt.chart;\n    if (!blob) return;\n    if (typeof blob === \"string\") return blob;\n    const {\n      data\n    } = blob;\n    const img = new Buffer.from(data).toString(\"ascii\");\n    return img;\n  };\n\n  const getVizByID = id => {\n    let pan = {\n      title: \" \",\n      description: \" \"\n    };\n    let viz = {\n      title: \" \",\n      description: \" \",\n      chart: null\n    };\n    if (panels) pan = panels.find(x => x.id === id);\n    if (visualizations) viz = visualizations.find(x => x.id === pan.visualization_id);\n    return viz;\n  };\n\n  const getIndByID = id => {\n    let pan = {\n      title: \" \",\n      description: \" \"\n    };\n    let ind = {\n      title: \" \",\n      description: \" \"\n    };\n    if (panels) pan = panels.find(x => x.id === id);\n    if (indicators) ind = indicators.find(x => x.id === pan.indicator_id);\n    return ind;\n  };\n\n  const displayCPanItem = id => {\n    alert(\"TODO\");\n  };\n\n  const dropCPanItem = id => {\n    let i = 0;\n    window.confirm(\"Are you sure you want to delete this panel?\") ? axios.delete(`http://localhost:3001/plist/${id}`).then(res => {\n      setpList(pList.filter(item => {\n        return item.id !== id;\n      }));\n    }) : i = 1;\n  };\n\n  const getPanels = () => {\n    axios.get(\"http://localhost:3001/panels\").then(res => {\n      setPanels(res.data);\n    });\n  };\n\n  const getpList = () => {\n    axios.get(\"http://localhost:3001/plist\").then(res => {\n      setpList(res.data);\n    });\n  };\n\n  const getIndicators = () => {\n    axios.get(\"http://localhost:3001/indicators\").then(res => {\n      setIndicators(res.data);\n    });\n  };\n\n  const getVisualizations = () => {\n    axios.get(\"http://localhost:3001/visualizations\").then(res => {\n      setVisualizations(res.data);\n    });\n  };\n\n  useEffect(() => {\n    getFrames();\n    getPanels();\n    getpList();\n    getIndicators();\n    getVisualizations();\n  }, []);\n\n  const updateDisplay = () => {\n    getFrames();\n    getPanels();\n    getpList();\n    getIndicators();\n    getVisualizations();\n  };\n\n  const fetchPanelElement = id => {\n    if (typeof id === \"undefined\") return {\n      title: null,\n      chart: null\n    };else {\n      let elt = panels.find(x => x.id === id);\n      if (elt) return elt;else return {\n        title: null,\n        description: null\n      };\n    }\n  };\n\n  const AddFrameItems = item => {\n    let elt = pList.find(x => x.frame_id === item.id);\n    setCurrentFrame(item);\n    setCurrentPanel(panels[0]);\n    setShowItemModal(true);\n  };\n\n  const DeleteFrameItems = item => {\n    let elt = pList.find(x => x.frame_id === item.id);\n    console.log(pList);\n  };\n\n  const CreateNewFrame = () => {\n    const item = {\n      title: \"NewFrame\",\n      description: \"Description\"\n    };\n    setCurrentFrame(item);\n    setCreationMode(true);\n    setShowModal(true);\n    return;\n  };\n\n  const EditFrame = item => {\n    console.log(item);\n    setCurrentFrame(item);\n    setCreationMode(false);\n    setShowModal(true);\n    return;\n    /* indicators.map((elt)=>{\r\n        if(elt.id == item.indicator_id) setCurrentIndicator(elt)\r\n    });\r\n        visualizations.map((elt)=>{\r\n        if(elt.id == item.visualization_id) setCurrentVisualization(elt)\r\n    }); */\n  };\n\n  return /*#__PURE__*/_jsxDEV(FrameContext.Provider, {\n    value: frameContext,\n    children: [/*#__PURE__*/_jsxDEV(Actions, {\n      title: \"un titre\",\n      show: showModal,\n      mode: \"Creation\",\n      frames: frames,\n      setFrames: setFrames,\n      updateDisplay: updateDisplay,\n      onClose: handleModalClose,\n      onSave: handleModalSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: CreateNewFrame,\n        children: [/*#__PURE__*/_jsxDEV(AddBoxRounded, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), \" \\xA0 New Frame Type\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-hover table-dark table-striped text-md-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Panels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: frames.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-sm btn-outline-info\",\n                role: \"button\",\n                onClick: () => AddFrameItems(item),\n                children: [/*#__PURE__*/_jsxDEV(Loupe, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this), \" Simple Panel\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"btn-sm btn-outline-primary\",\n                role: \"button\",\n                onClick: () => AddFrameItems(item),\n                children: [/*#__PURE__*/_jsxDEV(Loupe, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 21\n                }, this), \" Composite Panel\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"list-group-flush\",\n                children: getFrameItems(item).map(i => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-group-item d-flex justify-content-between align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      children: getPanByID(i.panel_id).title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 358,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Collapsible, {\n                      className: \"align-item-right\",\n                      trigger: /*#__PURE__*/_jsxDEV(\"span\", {\n                        role: \"button\",\n                        className: \"text-info btn-sm btn\",\n                        children: [\"Dispaly/Hide details of the panel \", /*#__PURE__*/_jsxDEV(EyeFill, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 366,\n                          columnNumber: 67\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 362,\n                        columnNumber: 31\n                      }, this),\n                      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                          children: \"Indicator:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 370,\n                          columnNumber: 31\n                        }, this), \" \", getIndByID(i.panel_id).title, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 370,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                        children: getVizByID(i.panel_id).title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 371,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"chart_box\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          alt: \"Chart\",\n                          src: decodeChart(getVizByID(i.panel_id))\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 374,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 372,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      role: \"button\",\n                      className: \"text-danger btn-sm\",\n                      onClick: () => dropCPanItem(i.id),\n                      children: /*#__PURE__*/_jsxDEV(RemoveCircle, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 387,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 382,\n                      columnNumber: 27\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                children: fetchPanelElement(item.id).title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-outline-primary\",\n                onClick: () => EditFrame(item),\n                children: /*#__PURE__*/_jsxDEV(EditRounded, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-outline-danger\",\n                onClick: () => deleteFrame(item.id),\n                children: /*#__PURE__*/_jsxDEV(HighlightOffRounded, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Frames, \"vZF1J3WGfKjQAKZ9NzSCna/YwGU=\");\n\n_c = Frames;\nexport default Frames;\n\nvar _c;\n\n$RefreshReg$(_c, \"Frames\");","map":{"version":3,"sources":["C:/Users/Madjid Sadallah/Documents/GitHub/CoGenDash/lad-creator/src/components/library/frames.js"],"names":["React","useState","useEffect","Actions","axios","Collapsible","AddBoxRounded","EditRounded","HighlightOff","HighlightOffRounded","Loupe","RemoveCircle","EyeFill","FrameContext","createContext","Frames","frames","setFrames","panels","setPanels","showModal","setShowModal","showItemModal","setShowItemModal","currentFrame","setCurrentFrame","currentPanel","setCurrentPanel","pList","setpList","visualizations","setVisualizations","indicators","setIndicators","frameContext","creationMode","setCreationMode","handleModalClose","handleItemModalClose","handleItemModalSave","element","plist","frame_id","id","panel_id","post","then","updateDisplay","handleModalSave","data","headers","put","res","map","item","title","description","deleteFrame","window","confirm","delete","filter","getFrames","get","getFrameItems","elts","i","getPanByID","elt","find","x","decodeChart","blob","chart","img","Buffer","from","toString","getVizByID","pan","viz","visualization_id","getIndByID","ind","indicator_id","displayCPanItem","alert","dropCPanItem","getPanels","getpList","getIndicators","getVisualizations","fetchPanelElement","AddFrameItems","DeleteFrameItems","console","log","CreateNewFrame","EditFrame"],"mappings":"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","sourcesContent":["import \"./library-view.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Actions from \"./frames_lib/frame_actions\";\r\nimport axios from \"axios\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport {\r\n  AddBoxRounded,\r\n  EditRounded,\r\n  HighlightOff,\r\n  HighlightOffRounded,\r\n  Loupe,\r\n  RemoveCircle,\r\n} from \"@material-ui/icons\";\r\n//import FrameItem from \"./panels_lib/frame_items\";\r\nimport { EyeFill } from \"react-bootstrap-icons\";\r\n\r\nexport const FrameContext = React.createContext();\r\n\r\nfunction Frames() {\r\n  const [frames, setFrames] = useState([]);\r\n  const [panels, setPanels] = useState([]);\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showItemModal, setShowItemModal] = useState(false);\r\n\r\n  const [currentFrame, setCurrentFrame] = useState();\r\n  const [currentPanel, setCurrentPanel] = useState();\r\n  const [pList, setpList] = useState();\r\n  const [visualizations, setVisualizations] = useState();\r\n  const [indicators, setIndicators] = useState();\r\n\r\n  const frameContext = [\r\n    currentFrame,\r\n    setCurrentFrame,\r\n    currentPanel,\r\n    setCurrentPanel,\r\n    pList,\r\n    setpList,\r\n    panels,\r\n    visualizations,\r\n    indicators,\r\n  ];\r\n\r\n  const [creationMode, setCreationMode] = useState(true);\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n  };\r\n  const handleItemModalClose = () => {\r\n    setShowItemModal(false);\r\n  };\r\n\r\n  const handleItemModalSave = () => {\r\n    let element = currentFrame;\r\n    let plist = {\r\n      frame_id: currentFrame.id,\r\n      panel_id: currentPanel.id,\r\n    };\r\n    axios.post(\"http://localhost:3001/plist\", plist).then(() => {\r\n      updateDisplay();\r\n    });\r\n\r\n    setShowItemModal(false);\r\n    updateDisplay();\r\n  };\r\n\r\n  const handleModalSave = () => {\r\n    let element = currentFrame;\r\n\r\n    //return;\r\n    if (creationMode)\r\n      axios.post(\"http://localhost:3001/frames\", element).then(() => {\r\n        setFrames([\r\n          ...frames,\r\n          {\r\n            data: element,\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n          },\r\n        ]);\r\n\r\n        updateDisplay();\r\n      });\r\n    else\r\n      axios.put(\"http://localhost:3001/frames\", element).then((res) => {\r\n        setFrames(\r\n          frames.map((item) => {\r\n            return item.id === element.id\r\n              ? {\r\n                  id: item.id,\r\n                  title: item.title,\r\n                  description: item.description,\r\n                }\r\n              : item;\r\n          })\r\n        );\r\n        updateDisplay();\r\n      });\r\n\r\n    setShowModal(false);\r\n    updateDisplay();\r\n  };\r\n\r\n  const deleteFrame = (id) => {\r\n    window.confirm(\"Are you sure you want to delete this type of frame?\")\r\n      ? axios.delete(`http://localhost:3001/frames/${id}`).then((res) => {\r\n          setFrames(\r\n            frames.filter((item) => {\r\n              return item.id !== id;\r\n            })\r\n          );\r\n        })\r\n      : (id = id);\r\n    updateDisplay();\r\n  };\r\n\r\n  const getFrames = () => {\r\n    axios.get(\"http://localhost:3001/frames\").then((res) => {\r\n      setFrames(res.data);\r\n    });\r\n  };\r\n  const getFrameItems = (item) => {\r\n    if (!pList) return [];\r\n    if (!item) return [];\r\n    let elts = pList.filter((i) => i.frame_id === item.id);\r\n    return elts;\r\n  };\r\n\r\n  const getPanByID = (id) => {\r\n    let elt = {\r\n      title: \" \",\r\n      description: \" \",\r\n    };\r\n    if (panels) elt = panels.find((x) => x.id === id);\r\n\r\n    return elt;\r\n  };\r\n\r\n  const decodeChart = (elt) => {\r\n    if (!elt) return; \r\n    let blob = elt.chart;\r\n    if (!blob) return;\r\n    if (typeof blob === \"string\") return blob;\r\n    const { data } = blob;\r\n    const img = new Buffer.from(data).toString(\"ascii\");\r\n    \r\n    return img;\r\n  };\r\n\r\n  const getVizByID = (id) => {\r\n    let pan = {\r\n      title: \" \",\r\n      description: \" \",\r\n    };\r\n    let viz = {\r\n      title: \" \",\r\n      description: \" \",\r\n      chart: null,\r\n    };\r\n    if (panels) pan = panels.find((x) => x.id === id);\r\n    if (visualizations)\r\n      viz = visualizations.find((x) => x.id === pan.visualization_id);\r\n\r\n    \r\n    return viz;\r\n  };\r\n  const getIndByID = (id) => {\r\n    let pan = {\r\n      title: \" \",\r\n      description: \" \",\r\n    };\r\n    let ind = {\r\n      title: \" \",\r\n      description: \" \"\r\n    };\r\n    if (panels) pan = panels.find((x) => x.id === id);\r\n    if (indicators)\r\n      ind = indicators.find((x) => x.id === pan.indicator_id);\r\n\r\n    \r\n    return ind;\r\n  };\r\n\r\n  const displayCPanItem = (id) => {\r\n    alert(\"TODO\");\r\n  };\r\n  const dropCPanItem = (id) => {\r\n    let i = 0;\r\n    window.confirm(\"Are you sure you want to delete this panel?\")\r\n      ? axios.delete(`http://localhost:3001/plist/${id}`).then((res) => {\r\n          setpList(\r\n            pList.filter((item) => {\r\n              return item.id !== id;\r\n            })\r\n          );\r\n        })\r\n      : (i = 1);\r\n  };\r\n\r\n  const getPanels = () => {\r\n    axios.get(\"http://localhost:3001/panels\").then((res) => {\r\n      setPanels(res.data);\r\n    });\r\n  };\r\n\r\n  const getpList = () => {\r\n    axios.get(\"http://localhost:3001/plist\").then((res) => {\r\n      setpList(res.data);\r\n    });\r\n  };\r\n\r\n  const getIndicators = () => {\r\n    axios.get(\"http://localhost:3001/indicators\").then((res) => {\r\n      setIndicators(res.data);\r\n    });\r\n  };\r\n  const getVisualizations = () => {\r\n    axios.get(\"http://localhost:3001/visualizations\").then((res) => {\r\n      setVisualizations(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFrames();\r\n    getPanels();\r\n    getpList();\r\n    getIndicators();\r\n    getVisualizations();\r\n  }, []);\r\n\r\n  const updateDisplay = () => {\r\n    getFrames();\r\n    getPanels();\r\n    getpList();\r\n    getIndicators();\r\n    getVisualizations();\r\n  };\r\n\r\n  const fetchPanelElement = (id) => {\r\n    if (typeof id === \"undefined\") return { title: null, chart: null };\r\n    else {\r\n      let elt = panels.find((x) => x.id === id);\r\n      if (elt) return elt;\r\n      else return { title: null, description: null };\r\n    }\r\n  };\r\n\r\n  const AddFrameItems = (item) => {\r\n    let elt = pList.find((x) => x.frame_id === item.id);\r\n\r\n    setCurrentFrame(item);\r\n    setCurrentPanel(panels[0]);\r\n    setShowItemModal(true);\r\n  };\r\n  const DeleteFrameItems = (item) => {\r\n    let elt = pList.find((x) => x.frame_id === item.id);\r\n    console.log(pList);\r\n  };\r\n\r\n  const CreateNewFrame = () => {\r\n    const item = {\r\n      title: \"NewFrame\",\r\n      description: \"Description\",\r\n    };\r\n    setCurrentFrame(item);\r\n    setCreationMode(true);\r\n    setShowModal(true);\r\n\r\n    return;\r\n  };\r\n\r\n  const EditFrame = (item) => {\r\n    console.log(item);\r\n    setCurrentFrame(item);\r\n    setCreationMode(false);\r\n    setShowModal(true);\r\n    return;\r\n    /* indicators.map((elt)=>{\r\n        if(elt.id == item.indicator_id) setCurrentIndicator(elt)\r\n    });\r\n\r\n\r\n    visualizations.map((elt)=>{\r\n        if(elt.id == item.visualization_id) setCurrentVisualization(elt)\r\n    }); */\r\n\r\n    \r\n\r\n    \r\n    \r\n  };\r\n  return (\r\n    <FrameContext.Provider value={frameContext}>\r\n      <Actions\r\n        title=\"un titre\"\r\n        show={showModal}\r\n        mode=\"Creation\"\r\n        frames={frames}\r\n        setFrames={setFrames}\r\n        updateDisplay={updateDisplay}\r\n        onClose={handleModalClose}\r\n        onSave={handleModalSave}\r\n      />\r\n     {/*  <FrameItem\r\n        title=\"un titre\"\r\n        show={showItemModal}\r\n        mode=\"Creation\"\r\n        frames={frames}\r\n        setFrames={setFrames}\r\n        updateDisplay={updateDisplay}\r\n        onClose={handleItemModalClose}\r\n        onSave={handleItemModalSave}\r\n      />\r\n */}\r\n      <div>\r\n        <button className=\"btn btn-success\" onClick={CreateNewFrame}>\r\n          <AddBoxRounded /> &nbsp; New Frame Type\r\n        </button>\r\n      </div>\r\n      <table className=\"table table-bordered table-hover table-dark table-striped text-md-start\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Title</th>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\">Panels</th>\r\n            <th scope=\"col\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {frames.map((item) => {\r\n            return (\r\n              <tr key={item.id}>\r\n                <th scope=\"row\">{item.id}</th>\r\n                <td><h6>{item.title}</h6></td>\r\n                <td>{item.description}</td>\r\n                <td>\r\n                  <span\r\n                    className=\"btn-sm btn-outline-info\"\r\n                    role=\"button\"\r\n                    onClick={() => AddFrameItems(item)}\r\n                  >\r\n                    <Loupe /> Simple Panel\r\n                  </span>\r\n\r\n                  <span\r\n                    className=\"btn-sm btn-outline-primary\"\r\n                    role=\"button\"\r\n                    onClick={() => AddFrameItems(item)}\r\n                  >\r\n                    <Loupe /> Composite Panel\r\n                  </span>\r\n                  <br />\r\n                  <br />\r\n                  <ol className=\"list-group-flush\">\r\n                    {getFrameItems(item).map((i) => {\r\n                      return (\r\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                          <h6>{getPanByID(i.panel_id).title}</h6>\r\n                          <Collapsible\r\n                            className=\"align-item-right\"\r\n                            trigger={\r\n                              <span\r\n                                role=\"button\"\r\n                                className=\"text-info btn-sm btn\"\r\n                              >\r\n                                Dispaly/Hide details of the panel <EyeFill />\r\n                              </span>\r\n                            }\r\n                          >\r\n                          <h6><i>Indicator:</i> {getIndByID(i.panel_id).title} </h6>\r\n                          <i>{getVizByID(i.panel_id).title}</i>\r\n                          <div className=\"chart_box\">\r\n                          \r\n                                <img\r\n                                  alt=\"Chart\"\r\n                                  src={decodeChart(getVizByID(i.panel_id))}\r\n                                />\r\n                                {/* <span >{getVizElement().description}</span> */}\r\n                              </div>\r\n                           \r\n                          </Collapsible>\r\n                          <span\r\n                            role=\"button\"\r\n                            className=\"text-danger btn-sm\"\r\n                            onClick={() => dropCPanItem(i.id)}\r\n                          >\r\n                            <RemoveCircle />\r\n                          </span>{\" \"}\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ol>\r\n                  <i>{fetchPanelElement(item.id).title}</i>\r\n                  {/*  <div className=\"chart_box\">                  \r\n                    <img alt=\"Chart\" src={decodeChart(fetchPanelElement(item.visualization_id).chart)} /> </div>*/}\r\n                </td>\r\n\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-primary\"\r\n                    onClick={() => EditFrame(item)}\r\n                  >\r\n                    <EditRounded />\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-sm btn-outline-danger\"\r\n                    onClick={() => deleteFrame(item.id)}\r\n                  >\r\n                    <HighlightOffRounded />\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </FrameContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Frames;\r\n"]},"metadata":{},"sourceType":"module"}